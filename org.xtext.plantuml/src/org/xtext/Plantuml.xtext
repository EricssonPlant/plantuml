// Class for generating the grammar for the PlantUML language.


grammar org.xtext.Plantuml 
	//with org.eclipse.xtext.common.Terminals
	hidden (WS, SL_COMMENT)

generate plantuml "http://www.xtext.org/Plantuml"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

// Model is a number of @startuml's and @enduml's
Model:
	(diagrams+=Diagram)*;
	
// A diagram starts with @Startuml and ends with @enduml, 
// with some number of instructions in between
Diagram:
	'@startuml' (instructions+=Instruction)* '@enduml'
;

// An instruction is either a sequence or a comment, or an autonumber command
Instruction:
	(name1=ID Sequence name2=ID (':' ID)?) 
	| ML_COMMENT
	| SL_COMMENT
	| Definition (Color)?
	| AutoNumber
;

Sequence:
	('\u002D')* '\u002D' '\u003E'						// - = u002D  | > = u003E
	| '\u003C' '\u002D' ('\u002D')* 						// < = u003C  | - = u002D
	| '\u002D' '\u003E' 'x'									// - = u002D  | > = u003E
	| 'x' '\u003C' '\u002D' 								// < = u003C | - = u002D
	| ('\u002D')* '\u002D' '\u003E' '\u003E'				// - = u002D | > = u003E
	| '\u003C' '\u003C' '\u002D' ('\u002D')*				// < = u003C | - = u002D
	| ('\u002D')* '\u002D' '\\' '\\'						// - = u002D
	| '\u002F' '\u002D' ('\u002D')*							// / = u002F | - = u002D
	| ('\u002D')* '\u002D' '\\\\' 							// - = u0g02D
	| '\u002F' '\u002F' '\u002D' ('\u002D')*				// / = u002F | - = u002D
	| ('\u002D')* '\u002D' '\u003E' 'o'						// - = u002D | > = u003E
	| 'o' '\u003C' '\u002D' ('\u002D')*						// < = u003C | - = u002D
	| ('\u002D')* '\u002D' '\u002D' '\u002F' '\u002F' 'o'	// - = u002D | / = u002F
	| 'o' '\\\\' '\u002D' '\u002D' ('\u002D')* 				// - = u002D
	| '\u003C' '\u002D' '\u003E' 							// < = u003C | - = u002D | > = u003E
	| '\u003C' '\u002D' '\u003E' 'o' 						// < = u003C | - = u002D | > = u003E
	| 'o' '\u003C' '\u002D' '\u003E' 						// < = u003C | - = u002D | > = u003E
	| '\u003C' '\u007C' '\u002D' '\u002D' 					// < = u003C | | = u007C | - = u002D
	| '\u002D' '\u002D' '\u007C' '\u003E' 					// - = u002D | | = u007C | > = u003E
	| '\u002E' '\u002E' 									// . = u002E
	| '\u002E'												// . = u002E
	
;

	
// Rule for defining objects in PlantUML, such as
// actors, boundaries, controls, entities and databases
Definition:
	'actor' name=ID 
	| 'boundary' name=ID
	| 'control' name=ID
	| 'entity' name=ID
	| 'database' name=ID

;

// Rule for the autonumbering function. Can be followed by one or two numbers, separated by spaces
AutoNumber:
	'autonumber' (INT (INT)?)?
;

// Rule for colors
Color:
	'#'+('AliceBlue'|'AntiqueWhite'|'Aqua'|'Aquamarine'|'Azure'|'Beige'|'Bisque'|'Black'|'BlanchedAlmond'
	|'Blue'|'BlueViolet'|'Brown'|'BurlyWood'|'CadetBlue'|'Chartreuse'|'Chocolate'|'Coral'
	|'CornflowerBlue'|'Cornsilk'|'Crimson'|'Cyan'|'DarkBlue'|'DarkCyan'|'DarkGoldenRod'|'DarkGray'
	|'DarkGreen'|'DarkGrey'|'DarkKhaki'|'DarkMagenta'|'DarkOliveGreen'|'DarkOrchid'|'DarkRed'
	|'DarkSalmo'|'DarkSeaGreen'|'DarkSlateBlue'|'DarkSlateGray'|'DarkSlateGrey'|'DarkTurquoise'
	|'DarkViolet'|'Darkorange'|'DeepPink'|'DeepSkyBlue'|'DimGray'|'DimGrey'|'DodgerBlue'
	|'FireBrick'|'FloralWhite'|'ForestGreen'|'Fuchsia'|'Gainsboro'|'GhostWhite'|'Gold'
	|'GoldenRod'|'Gray'|'Green'|'GreenYellow'|'Grey'|'HoneyDew'|'HotPink'|'IndianRed'
	|'Indigo'|'Ivory'|'Khaki'|'Lavender'|'LavenderBlush'|'LawnGreen'|'LemonChiffon'
	|'LightBlue'|'LightCoral'|'LightCyan'|'LightGoldenRodYellow'|'LightGray'|'LightGreen'
	|'LightGrey'|'LightPink'|'LightSalmon'|'LightSeaGreen'|'LightSkyBlue'|'LightSlateGray'
	|'LightSlateGrey'|'LightSteelBlue'|'LightYellow'|'Lime'|'LimeGreen'|'Linen'|'Magenta'
	|'Maroon'|'MediumAquaMarine'|'MediumBlue'|'MediumOrchid'|'MediumPurple'|'MediumSeaGreen'
	|'MediumSlateBlue'|'MediumSpringGreen'|'MediumTurquoise'|'MediumVioletRed'
	|'MidnightBlue'|'MintCream'|'MistyRose'|'Moccasin'|'NavajoWhite'|'Navy'|'OldLace'
	|'Olive'|'OliveDrab'|'OrangeRed'|'Orchid'|'PaleGoldenRod'|'PaleGreen'
	|'PaleTurquoise'|'PaleVioletRed'|'PapayaWhip'|'PeachPuff'|'Peru'|'Pink'|'Plum'
	|'PowderBlue'|'Purple'|'Red'|'RosyBrown'|'RoyalBlue'|'SaddleBrown'
	|'Salmon'|'SandyBrown'|'SeaGreen'|'Sienna'|'Silver'|'SkyBlue'|'SlateBlue'
	|'SlateGray'|'SlateGrey'|'Snow'|'SpringGreen'|'SteelBlue'|'Tan'|'Teal'|'Thistle'
	|'Tomato'|'Turquoise'|'Violet'|'Wheat'|'White'|'WhiteSmoke'|'Yellow'|'YellowGreen')
;

// Terminals
terminal ML_COMMENT : '/\'' -> '\'/';
terminal SL_COMMENT : '\'' !('\n'|'\r')* ('\r'? '\n')?;

terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_' | 'å' | 'ä' | 'ö') ('a'..'z'|'A'..'Z'|'_'|'0'..'9' | 'å' | 'ä' | 'ö')*;
terminal INT returns ecore::EInt: ('0'..'9')+;

terminal WS			: (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;


