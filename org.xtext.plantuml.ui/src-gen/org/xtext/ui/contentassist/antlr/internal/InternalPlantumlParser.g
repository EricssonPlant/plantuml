/*
 * generated by Xtext
 */
parser grammar InternalPlantumlParser;

options {
	tokenVocab=InternalPlantumlLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.PlantumlGrammarAccess;

}

@members {
 
 	private PlantumlGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("QuotationMark", "'\"'");
		tokenNameToValue.put("NumberSign", "'#'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSignLessThanSign", "'<<'");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("GreaterThanSignGreaterThanSign", "'>>'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
		tokenNameToValue.put("FullStopFullStopFullStop", "'...'");
		tokenNameToValue.put("Red", "'Red'");
		tokenNameToValue.put("Tan", "'Tan'");
		tokenNameToValue.put("Alt", "'alt'");
		tokenNameToValue.put("Box", "'box'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("Opt", "'opt'");
		tokenNameToValue.put("Par", "'par'");
		tokenNameToValue.put("Ref", "'ref'");
		tokenNameToValue.put("VerticalLineVerticalLineVerticalLine", "'|||'");
		tokenNameToValue.put("Aqua", "'Aqua'");
		tokenNameToValue.put("Blue", "'Blue'");
		tokenNameToValue.put("Cyan", "'Cyan'");
		tokenNameToValue.put("Gold", "'Gold'");
		tokenNameToValue.put("Gray", "'Gray'");
		tokenNameToValue.put("Grey", "'Grey'");
		tokenNameToValue.put("Lime", "'Lime'");
		tokenNameToValue.put("Navy", "'Navy'");
		tokenNameToValue.put("Peru", "'Peru'");
		tokenNameToValue.put("Pink", "'Pink'");
		tokenNameToValue.put("Plum", "'Plum'");
		tokenNameToValue.put("Snow", "'Snow'");
		tokenNameToValue.put("Teal", "'Teal'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Hide", "'hide'");
		tokenNameToValue.put("Left", "'left'");
		tokenNameToValue.put("Loop", "'loop'");
		tokenNameToValue.put("Note", "'note'");
		tokenNameToValue.put("Over", "'over'");
		tokenNameToValue.put("Azure", "'Azure'");
		tokenNameToValue.put("Beige", "'Beige'");
		tokenNameToValue.put("Black", "'Black'");
		tokenNameToValue.put("Brown", "'Brown'");
		tokenNameToValue.put("Coral", "'Coral'");
		tokenNameToValue.put("Green", "'Green'");
		tokenNameToValue.put("Ivory", "'Ivory'");
		tokenNameToValue.put("Khaki", "'Khaki'");
		tokenNameToValue.put("Linen", "'Linen'");
		tokenNameToValue.put("Olive", "'Olive'");
		tokenNameToValue.put("Wheat", "'Wheat'");
		tokenNameToValue.put("White", "'White'");
		tokenNameToValue.put("Actor", "'actor'");
		tokenNameToValue.put("Break", "'break'");
		tokenNameToValue.put("Group", "'group'");
		tokenNameToValue.put("Right", "'right'");
		tokenNameToValue.put("Title", "'title'");
		tokenNameToValue.put("Bisque", "'Bisque'");
		tokenNameToValue.put("Indigo", "'Indigo'");
		tokenNameToValue.put("Maroon", "'Maroon'");
		tokenNameToValue.put("Orchid", "'Orchid'");
		tokenNameToValue.put("Purple", "'Purple'");
		tokenNameToValue.put("Salmon", "'Salmon'");
		tokenNameToValue.put("Sienna", "'Sienna'");
		tokenNameToValue.put("Silver", "'Silver'");
		tokenNameToValue.put("Tomato", "'Tomato'");
		tokenNameToValue.put("Violet", "'Violet'");
		tokenNameToValue.put("Yellow", "'Yellow'");
		tokenNameToValue.put("Center", "'center'");
		tokenNameToValue.put("Create", "'create'");
		tokenNameToValue.put("Entity", "'entity'");
		tokenNameToValue.put("Legend", "'legend'");
		tokenNameToValue.put("Crimson", "'Crimson'");
		tokenNameToValue.put("DarkRed", "'DarkRed'");
		tokenNameToValue.put("DimGray", "'DimGray'");
		tokenNameToValue.put("DimGrey", "'DimGrey'");
		tokenNameToValue.put("Fuchsia", "'Fuchsia'");
		tokenNameToValue.put("HotPink", "'HotPink'");
		tokenNameToValue.put("Magenta", "'Magenta'");
		tokenNameToValue.put("OldLace", "'OldLace'");
		tokenNameToValue.put("SkyBlue", "'SkyBlue'");
		tokenNameToValue.put("Thistle", "'Thistle'");
		tokenNameToValue.put("Control", "'control'");
		tokenNameToValue.put("Destroy", "'destroy'");
		tokenNameToValue.put("Footbox", "'footbox'");
		tokenNameToValue.put("Newpage", "'newpage'");
		tokenNameToValue.put("Cornsilk", "'Cornsilk'");
		tokenNameToValue.put("DarkBlue", "'DarkBlue'");
		tokenNameToValue.put("DarkCyan", "'DarkCyan'");
		tokenNameToValue.put("DarkGray", "'DarkGray'");
		tokenNameToValue.put("DarkGrey", "'DarkGrey'");
		tokenNameToValue.put("DeepPink", "'DeepPink'");
		tokenNameToValue.put("HoneyDew", "'HoneyDew'");
		tokenNameToValue.put("Lavender", "'Lavender'");
		tokenNameToValue.put("Moccasin", "'Moccasin'");
		tokenNameToValue.put("SeaGreen", "'SeaGreen'");
		tokenNameToValue.put("Activate", "'activate'");
		tokenNameToValue.put("Boundary", "'boundary'");
		tokenNameToValue.put("Critical", "'critical'");
		tokenNameToValue.put("Database", "'database'");
		tokenNameToValue.put("AliceBlue", "'AliceBlue'");
		tokenNameToValue.put("BurlyWood", "'BurlyWood'");
		tokenNameToValue.put("CadetBlue", "'CadetBlue'");
		tokenNameToValue.put("Chocolate", "'Chocolate'");
		tokenNameToValue.put("DarkGreen", "'DarkGreen'");
		tokenNameToValue.put("DarkKhaki", "'DarkKhaki'");
		tokenNameToValue.put("DarkSalmo", "'DarkSalmo'");
		tokenNameToValue.put("FireBrick", "'FireBrick'");
		tokenNameToValue.put("Gainsboro", "'Gainsboro'");
		tokenNameToValue.put("GoldenRod", "'GoldenRod'");
		tokenNameToValue.put("IndianRed", "'IndianRed'");
		tokenNameToValue.put("LawnGreen", "'LawnGreen'");
		tokenNameToValue.put("LightBlue", "'LightBlue'");
		tokenNameToValue.put("LightCyan", "'LightCyan'");
		tokenNameToValue.put("LightGray", "'LightGray'");
		tokenNameToValue.put("LightGrey", "'LightGrey'");
		tokenNameToValue.put("LightPink", "'LightPink'");
		tokenNameToValue.put("LimeGreen", "'LimeGreen'");
		tokenNameToValue.put("MintCream", "'MintCream'");
		tokenNameToValue.put("MistyRose", "'MistyRose'");
		tokenNameToValue.put("OliveDrab", "'OliveDrab'");
		tokenNameToValue.put("OrangeRed", "'OrangeRed'");
		tokenNameToValue.put("PaleGreen", "'PaleGreen'");
		tokenNameToValue.put("PeachPuff", "'PeachPuff'");
		tokenNameToValue.put("RosyBrown", "'RosyBrown'");
		tokenNameToValue.put("RoyalBlue", "'RoyalBlue'");
		tokenNameToValue.put("SlateBlue", "'SlateBlue'");
		tokenNameToValue.put("SlateGray", "'SlateGray'");
		tokenNameToValue.put("SlateGrey", "'SlateGrey'");
		tokenNameToValue.put("SteelBlue", "'SteelBlue'");
		tokenNameToValue.put("Turquoise", "'Turquoise'");
		tokenNameToValue.put("Endlegend", "'endlegend'");
		tokenNameToValue.put("Aquamarine", "'Aquamarine'");
		tokenNameToValue.put("BlueViolet", "'BlueViolet'");
		tokenNameToValue.put("Chartreuse", "'Chartreuse'");
		tokenNameToValue.put("DarkOrchid", "'DarkOrchid'");
		tokenNameToValue.put("DarkViolet", "'DarkViolet'");
		tokenNameToValue.put("Darkorange", "'Darkorange'");
		tokenNameToValue.put("DodgerBlue", "'DodgerBlue'");
		tokenNameToValue.put("GhostWhite", "'GhostWhite'");
		tokenNameToValue.put("LightCoral", "'LightCoral'");
		tokenNameToValue.put("LightGreen", "'LightGreen'");
		tokenNameToValue.put("MediumBlue", "'MediumBlue'");
		tokenNameToValue.put("PapayaWhip", "'PapayaWhip'");
		tokenNameToValue.put("PowderBlue", "'PowderBlue'");
		tokenNameToValue.put("SandyBrown", "'SandyBrown'");
		tokenNameToValue.put("WhiteSmoke", "'WhiteSmoke'");
		tokenNameToValue.put("Autonumber", "'autonumber'");
		tokenNameToValue.put("Deactivate", "'deactivate'");
		tokenNameToValue.put("DarkMagenta", "'DarkMagenta'");
		tokenNameToValue.put("DeepSkyBlue", "'DeepSkyBlue'");
		tokenNameToValue.put("FloralWhite", "'FloralWhite'");
		tokenNameToValue.put("ForestGreen", "'ForestGreen'");
		tokenNameToValue.put("GreenYellow", "'GreenYellow'");
		tokenNameToValue.put("LightSalmon", "'LightSalmon'");
		tokenNameToValue.put("LightYellow", "'LightYellow'");
		tokenNameToValue.put("NavajoWhite", "'NavajoWhite'");
		tokenNameToValue.put("SaddleBrown", "'SaddleBrown'");
		tokenNameToValue.put("SpringGreen", "'SpringGreen'");
		tokenNameToValue.put("YellowGreen", "'YellowGreen'");
		tokenNameToValue.put("Participant", "'participant'");
		tokenNameToValue.put("AntiqueWhite", "'AntiqueWhite'");
		tokenNameToValue.put("DarkSeaGreen", "'DarkSeaGreen'");
		tokenNameToValue.put("LemonChiffon", "'LemonChiffon'");
		tokenNameToValue.put("LightSkyBlue", "'LightSkyBlue'");
		tokenNameToValue.put("MediumOrchid", "'MediumOrchid'");
		tokenNameToValue.put("MediumPurple", "'MediumPurple'");
		tokenNameToValue.put("MidnightBlue", "'MidnightBlue'");
		tokenNameToValue.put("DarkGoldenRod", "'DarkGoldenRod'");
		tokenNameToValue.put("DarkSlateBlue", "'DarkSlateBlue'");
		tokenNameToValue.put("DarkSlateGray", "'DarkSlateGray'");
		tokenNameToValue.put("DarkSlateGrey", "'DarkSlateGrey'");
		tokenNameToValue.put("DarkTurquoise", "'DarkTurquoise'");
		tokenNameToValue.put("LavenderBlush", "'LavenderBlush'");
		tokenNameToValue.put("LightSeaGreen", "'LightSeaGreen'");
		tokenNameToValue.put("PaleGoldenRod", "'PaleGoldenRod'");
		tokenNameToValue.put("PaleTurquoise", "'PaleTurquoise'");
		tokenNameToValue.put("PaleVioletRed", "'PaleVioletRed'");
		tokenNameToValue.put("BlanchedAlmond", "'BlanchedAlmond'");
		tokenNameToValue.put("CornflowerBlue", "'CornflowerBlue'");
		tokenNameToValue.put("DarkOliveGreen", "'DarkOliveGreen'");
		tokenNameToValue.put("LightSlateGray", "'LightSlateGray'");
		tokenNameToValue.put("LightSlateGrey", "'LightSlateGrey'");
		tokenNameToValue.put("LightSteelBlue", "'LightSteelBlue'");
		tokenNameToValue.put("MediumSeaGreen", "'MediumSeaGreen'");
		tokenNameToValue.put("MediumSlateBlue", "'MediumSlateBlue'");
		tokenNameToValue.put("MediumTurquoise", "'MediumTurquoise'");
		tokenNameToValue.put("MediumVioletRed", "'MediumVioletRed'");
		tokenNameToValue.put("MediumAquaMarine", "'MediumAquaMarine'");
		tokenNameToValue.put("MediumSpringGreen", "'MediumSpringGreen'");
		tokenNameToValue.put("LightGoldenRodYellow", "'LightGoldenRodYellow'");
 	}
 	
    public void setGrammarAccess(PlantumlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getModelAccess().getDiagramsAssignment()); }
(rule__Model__DiagramsAssignment)*
{ after(grammarAccess.getModelAccess().getDiagramsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDiagram
entryRuleDiagram 
:
{ before(grammarAccess.getDiagramRule()); }
	 ruleDiagram
{ after(grammarAccess.getDiagramRule()); } 
	 EOF 
;

// Rule Diagram
ruleDiagram 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDiagramAccess().getGroup()); }
(rule__Diagram__Group__0)
{ after(grammarAccess.getDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstructionAccess().getGroup()); }
(rule__Instruction__Group__0)
{ after(grammarAccess.getInstructionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrow
entryRuleArrow 
:
{ before(grammarAccess.getArrowRule()); }
	 ruleArrow
{ after(grammarAccess.getArrowRule()); } 
	 EOF 
;

// Rule Arrow
ruleArrow 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrowAccess().getGroup()); }
(rule__Arrow__Group__0)
{ after(grammarAccess.getArrowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
(rule__Definition__Alternatives)
{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAutoNumber
entryRuleAutoNumber 
:
{ before(grammarAccess.getAutoNumberRule()); }
	 ruleAutoNumber
{ after(grammarAccess.getAutoNumberRule()); } 
	 EOF 
;

// Rule AutoNumber
ruleAutoNumber 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAutoNumberAccess().getGroup()); }
(rule__AutoNumber__Group__0)
{ after(grammarAccess.getAutoNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColor
entryRuleColor 
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getColorAccess().getGroup()); }
(rule__Color__Group__0)
{ after(grammarAccess.getColorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTitle
entryRuleTitle 
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTitleAccess().getGroup()); }
(rule__Title__Group__0)
{ after(grammarAccess.getTitleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLegend
entryRuleLegend 
:
{ before(grammarAccess.getLegendRule()); }
	 ruleLegend
{ after(grammarAccess.getLegendRule()); } 
	 EOF 
;

// Rule Legend
ruleLegend 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLegendAccess().getGroup()); }
(rule__Legend__Group__0)
{ after(grammarAccess.getLegendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewpage
entryRuleNewpage 
:
{ before(grammarAccess.getNewpageRule()); }
	 ruleNewpage
{ after(grammarAccess.getNewpageRule()); } 
	 EOF 
;

// Rule Newpage
ruleNewpage 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNewpageAccess().getGroup()); }
(rule__Newpage__Group__0)
{ after(grammarAccess.getNewpageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAltElse
entryRuleAltElse 
:
{ before(grammarAccess.getAltElseRule()); }
	 ruleAltElse
{ after(grammarAccess.getAltElseRule()); } 
	 EOF 
;

// Rule AltElse
ruleAltElse 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAltElseAccess().getGroup()); }
(rule__AltElse__Group__0)
{ after(grammarAccess.getAltElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElse
entryRuleElse 
:
{ before(grammarAccess.getElseRule()); }
	 ruleElse
{ after(grammarAccess.getElseRule()); } 
	 EOF 
;

// Rule Else
ruleElse 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getElseAccess().getGroup()); }
(rule__Else__Group__0)
{ after(grammarAccess.getElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupingMessages
entryRuleGroupingMessages 
:
{ before(grammarAccess.getGroupingMessagesRule()); }
	 ruleGroupingMessages
{ after(grammarAccess.getGroupingMessagesRule()); } 
	 EOF 
;

// Rule GroupingMessages
ruleGroupingMessages 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getGroupingMessagesAccess().getGroup()); }
(rule__GroupingMessages__Group__0)
{ after(grammarAccess.getGroupingMessagesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNote
entryRuleNote 
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoteAccess().getGroup()); }
(rule__Note__Group__0)
{ after(grammarAccess.getNoteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivider
entryRuleDivider 
:
{ before(grammarAccess.getDividerRule()); }
	 ruleDivider
{ after(grammarAccess.getDividerRule()); } 
	 EOF 
;

// Rule Divider
ruleDivider 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDividerAccess().getGroup()); }
(rule__Divider__Group__0)
{ after(grammarAccess.getDividerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelay
entryRuleDelay 
:
{ before(grammarAccess.getDelayRule()); }
	 ruleDelay
{ after(grammarAccess.getDelayRule()); } 
	 EOF 
;

// Rule Delay
ruleDelay 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDelayAccess().getGroup()); }
(rule__Delay__Group__0)
{ after(grammarAccess.getDelayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpace
entryRuleSpace 
:
{ before(grammarAccess.getSpaceRule()); }
	 ruleSpace
{ after(grammarAccess.getSpaceRule()); } 
	 EOF 
;

// Rule Space
ruleSpace 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSpaceAccess().getAlternatives()); }
(rule__Space__Alternatives)
{ after(grammarAccess.getSpaceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHidefootbox
entryRuleHidefootbox 
:
{ before(grammarAccess.getHidefootboxRule()); }
	 ruleHidefootbox
{ after(grammarAccess.getHidefootboxRule()); } 
	 EOF 
;

// Rule Hidefootbox
ruleHidefootbox 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getHidefootboxAccess().getGroup()); }
(rule__Hidefootbox__Group__0)
{ after(grammarAccess.getHidefootboxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivate
entryRuleActivate 
:
{ before(grammarAccess.getActivateRule()); }
	 ruleActivate
{ after(grammarAccess.getActivateRule()); } 
	 EOF 
;

// Rule Activate
ruleActivate 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getActivateAccess().getGroup()); }
(rule__Activate__Group__0)
{ after(grammarAccess.getActivateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeactivate
entryRuleDeactivate 
:
{ before(grammarAccess.getDeactivateRule()); }
	 ruleDeactivate
{ after(grammarAccess.getDeactivateRule()); } 
	 EOF 
;

// Rule Deactivate
ruleDeactivate 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDeactivateAccess().getGroup()); }
(rule__Deactivate__Group__0)
{ after(grammarAccess.getDeactivateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCreation
entryRuleParticipantCreation 
:
{ before(grammarAccess.getParticipantCreationRule()); }
	 ruleParticipantCreation
{ after(grammarAccess.getParticipantCreationRule()); } 
	 EOF 
;

// Rule ParticipantCreation
ruleParticipantCreation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParticipantCreationAccess().getGroup()); }
(rule__ParticipantCreation__Group__0)
{ after(grammarAccess.getParticipantCreationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBox
entryRuleBox 
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBoxAccess().getGroup()); }
(rule__Box__Group__0)
{ after(grammarAccess.getBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Instruction__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getArrowParserRuleCall_0_0()); }
	ruleArrow
{ after(grammarAccess.getInstructionAccess().getArrowParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGroup_0_1()); }
(rule__Instruction__Group_0_1__0)
{ after(grammarAccess.getInstructionAccess().getGroup_0_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAutoNumberParserRuleCall_0_2()); }
	ruleAutoNumber
{ after(grammarAccess.getInstructionAccess().getAutoNumberParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getTitleParserRuleCall_0_3()); }
	ruleTitle
{ after(grammarAccess.getInstructionAccess().getTitleParserRuleCall_0_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLegendParserRuleCall_0_4()); }
	ruleLegend
{ after(grammarAccess.getInstructionAccess().getLegendParserRuleCall_0_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getNewpageParserRuleCall_0_5()); }
	ruleNewpage
{ after(grammarAccess.getInstructionAccess().getNewpageParserRuleCall_0_5()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAltElseParserRuleCall_0_6()); }
	ruleAltElse
{ after(grammarAccess.getInstructionAccess().getAltElseParserRuleCall_0_6()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGroupingMessagesParserRuleCall_0_7()); }
	ruleGroupingMessages
{ after(grammarAccess.getInstructionAccess().getGroupingMessagesParserRuleCall_0_7()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getNoteParserRuleCall_0_8()); }
	ruleNote
{ after(grammarAccess.getInstructionAccess().getNoteParserRuleCall_0_8()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDividerParserRuleCall_0_9()); }
	ruleDivider
{ after(grammarAccess.getInstructionAccess().getDividerParserRuleCall_0_9()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getReferenceParserRuleCall_0_10()); }
	ruleReference
{ after(grammarAccess.getInstructionAccess().getReferenceParserRuleCall_0_10()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDelayParserRuleCall_0_11()); }
	ruleDelay
{ after(grammarAccess.getInstructionAccess().getDelayParserRuleCall_0_11()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getSpaceParserRuleCall_0_12()); }
	ruleSpace
{ after(grammarAccess.getInstructionAccess().getSpaceParserRuleCall_0_12()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getHidefootboxParserRuleCall_0_13()); }
	ruleHidefootbox
{ after(grammarAccess.getInstructionAccess().getHidefootboxParserRuleCall_0_13()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getActivateParserRuleCall_0_14()); }
	ruleActivate
{ after(grammarAccess.getInstructionAccess().getActivateParserRuleCall_0_14()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDeactivateParserRuleCall_0_15()); }
	ruleDeactivate
{ after(grammarAccess.getInstructionAccess().getDeactivateParserRuleCall_0_15()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getParticipantCreationParserRuleCall_0_16()); }
	ruleParticipantCreation
{ after(grammarAccess.getInstructionAccess().getParticipantCreationParserRuleCall_0_16()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getBoxParserRuleCall_0_17()); }
	ruleBox
{ after(grammarAccess.getInstructionAccess().getBoxParserRuleCall_0_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_0()); }
(rule__Definition__Group_0__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_1()); }
(rule__Definition__Group_1__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_2()); }
(rule__Definition__Group_2__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_3()); }
(rule__Definition__Group_3__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_4()); }
(rule__Definition__Group_4__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_5()); }
(rule__Definition__Group_5__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_5_2_1_0()); }
(rule__Definition__Group_5_2_1_0__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_5_2_1_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_5_2_1_1()); }
(rule__Definition__Group_5_2_1_1__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_5_2_1_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_2()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAliceBlueKeyword_1_0()); }

	AliceBlue 

{ after(grammarAccess.getColorAccess().getAliceBlueKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAntiqueWhiteKeyword_1_1()); }

	AntiqueWhite 

{ after(grammarAccess.getColorAccess().getAntiqueWhiteKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAquaKeyword_1_2()); }

	Aqua 

{ after(grammarAccess.getColorAccess().getAquaKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAquamarineKeyword_1_3()); }

	Aquamarine 

{ after(grammarAccess.getColorAccess().getAquamarineKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAzureKeyword_1_4()); }

	Azure 

{ after(grammarAccess.getColorAccess().getAzureKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBeigeKeyword_1_5()); }

	Beige 

{ after(grammarAccess.getColorAccess().getBeigeKeyword_1_5()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBisqueKeyword_1_6()); }

	Bisque 

{ after(grammarAccess.getColorAccess().getBisqueKeyword_1_6()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlackKeyword_1_7()); }

	Black 

{ after(grammarAccess.getColorAccess().getBlackKeyword_1_7()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlanchedAlmondKeyword_1_8()); }

	BlanchedAlmond 

{ after(grammarAccess.getColorAccess().getBlanchedAlmondKeyword_1_8()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlueKeyword_1_9()); }

	Blue 

{ after(grammarAccess.getColorAccess().getBlueKeyword_1_9()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlueVioletKeyword_1_10()); }

	BlueViolet 

{ after(grammarAccess.getColorAccess().getBlueVioletKeyword_1_10()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBrownKeyword_1_11()); }

	Brown 

{ after(grammarAccess.getColorAccess().getBrownKeyword_1_11()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBurlyWoodKeyword_1_12()); }

	BurlyWood 

{ after(grammarAccess.getColorAccess().getBurlyWoodKeyword_1_12()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCadetBlueKeyword_1_13()); }

	CadetBlue 

{ after(grammarAccess.getColorAccess().getCadetBlueKeyword_1_13()); }
)

    |(
{ before(grammarAccess.getColorAccess().getChartreuseKeyword_1_14()); }

	Chartreuse 

{ after(grammarAccess.getColorAccess().getChartreuseKeyword_1_14()); }
)

    |(
{ before(grammarAccess.getColorAccess().getChocolateKeyword_1_15()); }

	Chocolate 

{ after(grammarAccess.getColorAccess().getChocolateKeyword_1_15()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCoralKeyword_1_16()); }

	Coral 

{ after(grammarAccess.getColorAccess().getCoralKeyword_1_16()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCornflowerBlueKeyword_1_17()); }

	CornflowerBlue 

{ after(grammarAccess.getColorAccess().getCornflowerBlueKeyword_1_17()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCornsilkKeyword_1_18()); }

	Cornsilk 

{ after(grammarAccess.getColorAccess().getCornsilkKeyword_1_18()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCrimsonKeyword_1_19()); }

	Crimson 

{ after(grammarAccess.getColorAccess().getCrimsonKeyword_1_19()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCyanKeyword_1_20()); }

	Cyan 

{ after(grammarAccess.getColorAccess().getCyanKeyword_1_20()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkBlueKeyword_1_21()); }

	DarkBlue 

{ after(grammarAccess.getColorAccess().getDarkBlueKeyword_1_21()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkCyanKeyword_1_22()); }

	DarkCyan 

{ after(grammarAccess.getColorAccess().getDarkCyanKeyword_1_22()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkGoldenRodKeyword_1_23()); }

	DarkGoldenRod 

{ after(grammarAccess.getColorAccess().getDarkGoldenRodKeyword_1_23()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkGrayKeyword_1_24()); }

	DarkGray 

{ after(grammarAccess.getColorAccess().getDarkGrayKeyword_1_24()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkGreenKeyword_1_25()); }

	DarkGreen 

{ after(grammarAccess.getColorAccess().getDarkGreenKeyword_1_25()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkGreyKeyword_1_26()); }

	DarkGrey 

{ after(grammarAccess.getColorAccess().getDarkGreyKeyword_1_26()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkKhakiKeyword_1_27()); }

	DarkKhaki 

{ after(grammarAccess.getColorAccess().getDarkKhakiKeyword_1_27()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkMagentaKeyword_1_28()); }

	DarkMagenta 

{ after(grammarAccess.getColorAccess().getDarkMagentaKeyword_1_28()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkOliveGreenKeyword_1_29()); }

	DarkOliveGreen 

{ after(grammarAccess.getColorAccess().getDarkOliveGreenKeyword_1_29()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkOrchidKeyword_1_30()); }

	DarkOrchid 

{ after(grammarAccess.getColorAccess().getDarkOrchidKeyword_1_30()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkRedKeyword_1_31()); }

	DarkRed 

{ after(grammarAccess.getColorAccess().getDarkRedKeyword_1_31()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkSalmoKeyword_1_32()); }

	DarkSalmo 

{ after(grammarAccess.getColorAccess().getDarkSalmoKeyword_1_32()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkSeaGreenKeyword_1_33()); }

	DarkSeaGreen 

{ after(grammarAccess.getColorAccess().getDarkSeaGreenKeyword_1_33()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkSlateBlueKeyword_1_34()); }

	DarkSlateBlue 

{ after(grammarAccess.getColorAccess().getDarkSlateBlueKeyword_1_34()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkSlateGrayKeyword_1_35()); }

	DarkSlateGray 

{ after(grammarAccess.getColorAccess().getDarkSlateGrayKeyword_1_35()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkSlateGreyKeyword_1_36()); }

	DarkSlateGrey 

{ after(grammarAccess.getColorAccess().getDarkSlateGreyKeyword_1_36()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkTurquoiseKeyword_1_37()); }

	DarkTurquoise 

{ after(grammarAccess.getColorAccess().getDarkTurquoiseKeyword_1_37()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkVioletKeyword_1_38()); }

	DarkViolet 

{ after(grammarAccess.getColorAccess().getDarkVioletKeyword_1_38()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkorangeKeyword_1_39()); }

	Darkorange 

{ after(grammarAccess.getColorAccess().getDarkorangeKeyword_1_39()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDeepPinkKeyword_1_40()); }

	DeepPink 

{ after(grammarAccess.getColorAccess().getDeepPinkKeyword_1_40()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDeepSkyBlueKeyword_1_41()); }

	DeepSkyBlue 

{ after(grammarAccess.getColorAccess().getDeepSkyBlueKeyword_1_41()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDimGrayKeyword_1_42()); }

	DimGray 

{ after(grammarAccess.getColorAccess().getDimGrayKeyword_1_42()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDimGreyKeyword_1_43()); }

	DimGrey 

{ after(grammarAccess.getColorAccess().getDimGreyKeyword_1_43()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDodgerBlueKeyword_1_44()); }

	DodgerBlue 

{ after(grammarAccess.getColorAccess().getDodgerBlueKeyword_1_44()); }
)

    |(
{ before(grammarAccess.getColorAccess().getFireBrickKeyword_1_45()); }

	FireBrick 

{ after(grammarAccess.getColorAccess().getFireBrickKeyword_1_45()); }
)

    |(
{ before(grammarAccess.getColorAccess().getFloralWhiteKeyword_1_46()); }

	FloralWhite 

{ after(grammarAccess.getColorAccess().getFloralWhiteKeyword_1_46()); }
)

    |(
{ before(grammarAccess.getColorAccess().getForestGreenKeyword_1_47()); }

	ForestGreen 

{ after(grammarAccess.getColorAccess().getForestGreenKeyword_1_47()); }
)

    |(
{ before(grammarAccess.getColorAccess().getFuchsiaKeyword_1_48()); }

	Fuchsia 

{ after(grammarAccess.getColorAccess().getFuchsiaKeyword_1_48()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGainsboroKeyword_1_49()); }

	Gainsboro 

{ after(grammarAccess.getColorAccess().getGainsboroKeyword_1_49()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGhostWhiteKeyword_1_50()); }

	GhostWhite 

{ after(grammarAccess.getColorAccess().getGhostWhiteKeyword_1_50()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGoldKeyword_1_51()); }

	Gold 

{ after(grammarAccess.getColorAccess().getGoldKeyword_1_51()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGoldenRodKeyword_1_52()); }

	GoldenRod 

{ after(grammarAccess.getColorAccess().getGoldenRodKeyword_1_52()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGrayKeyword_1_53()); }

	Gray 

{ after(grammarAccess.getColorAccess().getGrayKeyword_1_53()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreenKeyword_1_54()); }

	Green 

{ after(grammarAccess.getColorAccess().getGreenKeyword_1_54()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreenYellowKeyword_1_55()); }

	GreenYellow 

{ after(grammarAccess.getColorAccess().getGreenYellowKeyword_1_55()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreyKeyword_1_56()); }

	Grey 

{ after(grammarAccess.getColorAccess().getGreyKeyword_1_56()); }
)

    |(
{ before(grammarAccess.getColorAccess().getHoneyDewKeyword_1_57()); }

	HoneyDew 

{ after(grammarAccess.getColorAccess().getHoneyDewKeyword_1_57()); }
)

    |(
{ before(grammarAccess.getColorAccess().getHotPinkKeyword_1_58()); }

	HotPink 

{ after(grammarAccess.getColorAccess().getHotPinkKeyword_1_58()); }
)

    |(
{ before(grammarAccess.getColorAccess().getIndianRedKeyword_1_59()); }

	IndianRed 

{ after(grammarAccess.getColorAccess().getIndianRedKeyword_1_59()); }
)

    |(
{ before(grammarAccess.getColorAccess().getIndigoKeyword_1_60()); }

	Indigo 

{ after(grammarAccess.getColorAccess().getIndigoKeyword_1_60()); }
)

    |(
{ before(grammarAccess.getColorAccess().getIvoryKeyword_1_61()); }

	Ivory 

{ after(grammarAccess.getColorAccess().getIvoryKeyword_1_61()); }
)

    |(
{ before(grammarAccess.getColorAccess().getKhakiKeyword_1_62()); }

	Khaki 

{ after(grammarAccess.getColorAccess().getKhakiKeyword_1_62()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLavenderKeyword_1_63()); }

	Lavender 

{ after(grammarAccess.getColorAccess().getLavenderKeyword_1_63()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLavenderBlushKeyword_1_64()); }

	LavenderBlush 

{ after(grammarAccess.getColorAccess().getLavenderBlushKeyword_1_64()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLawnGreenKeyword_1_65()); }

	LawnGreen 

{ after(grammarAccess.getColorAccess().getLawnGreenKeyword_1_65()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLemonChiffonKeyword_1_66()); }

	LemonChiffon 

{ after(grammarAccess.getColorAccess().getLemonChiffonKeyword_1_66()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightBlueKeyword_1_67()); }

	LightBlue 

{ after(grammarAccess.getColorAccess().getLightBlueKeyword_1_67()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightCoralKeyword_1_68()); }

	LightCoral 

{ after(grammarAccess.getColorAccess().getLightCoralKeyword_1_68()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightCyanKeyword_1_69()); }

	LightCyan 

{ after(grammarAccess.getColorAccess().getLightCyanKeyword_1_69()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightGoldenRodYellowKeyword_1_70()); }

	LightGoldenRodYellow 

{ after(grammarAccess.getColorAccess().getLightGoldenRodYellowKeyword_1_70()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightGrayKeyword_1_71()); }

	LightGray 

{ after(grammarAccess.getColorAccess().getLightGrayKeyword_1_71()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightGreenKeyword_1_72()); }

	LightGreen 

{ after(grammarAccess.getColorAccess().getLightGreenKeyword_1_72()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightGreyKeyword_1_73()); }

	LightGrey 

{ after(grammarAccess.getColorAccess().getLightGreyKeyword_1_73()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightPinkKeyword_1_74()); }

	LightPink 

{ after(grammarAccess.getColorAccess().getLightPinkKeyword_1_74()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightSalmonKeyword_1_75()); }

	LightSalmon 

{ after(grammarAccess.getColorAccess().getLightSalmonKeyword_1_75()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightSeaGreenKeyword_1_76()); }

	LightSeaGreen 

{ after(grammarAccess.getColorAccess().getLightSeaGreenKeyword_1_76()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightSkyBlueKeyword_1_77()); }

	LightSkyBlue 

{ after(grammarAccess.getColorAccess().getLightSkyBlueKeyword_1_77()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightSlateGrayKeyword_1_78()); }

	LightSlateGray 

{ after(grammarAccess.getColorAccess().getLightSlateGrayKeyword_1_78()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightSlateGreyKeyword_1_79()); }

	LightSlateGrey 

{ after(grammarAccess.getColorAccess().getLightSlateGreyKeyword_1_79()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightSteelBlueKeyword_1_80()); }

	LightSteelBlue 

{ after(grammarAccess.getColorAccess().getLightSteelBlueKeyword_1_80()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightYellowKeyword_1_81()); }

	LightYellow 

{ after(grammarAccess.getColorAccess().getLightYellowKeyword_1_81()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLimeKeyword_1_82()); }

	Lime 

{ after(grammarAccess.getColorAccess().getLimeKeyword_1_82()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLimeGreenKeyword_1_83()); }

	LimeGreen 

{ after(grammarAccess.getColorAccess().getLimeGreenKeyword_1_83()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLinenKeyword_1_84()); }

	Linen 

{ after(grammarAccess.getColorAccess().getLinenKeyword_1_84()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMagentaKeyword_1_85()); }

	Magenta 

{ after(grammarAccess.getColorAccess().getMagentaKeyword_1_85()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMaroonKeyword_1_86()); }

	Maroon 

{ after(grammarAccess.getColorAccess().getMaroonKeyword_1_86()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumAquaMarineKeyword_1_87()); }

	MediumAquaMarine 

{ after(grammarAccess.getColorAccess().getMediumAquaMarineKeyword_1_87()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumBlueKeyword_1_88()); }

	MediumBlue 

{ after(grammarAccess.getColorAccess().getMediumBlueKeyword_1_88()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumOrchidKeyword_1_89()); }

	MediumOrchid 

{ after(grammarAccess.getColorAccess().getMediumOrchidKeyword_1_89()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumPurpleKeyword_1_90()); }

	MediumPurple 

{ after(grammarAccess.getColorAccess().getMediumPurpleKeyword_1_90()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumSeaGreenKeyword_1_91()); }

	MediumSeaGreen 

{ after(grammarAccess.getColorAccess().getMediumSeaGreenKeyword_1_91()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumSlateBlueKeyword_1_92()); }

	MediumSlateBlue 

{ after(grammarAccess.getColorAccess().getMediumSlateBlueKeyword_1_92()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumSpringGreenKeyword_1_93()); }

	MediumSpringGreen 

{ after(grammarAccess.getColorAccess().getMediumSpringGreenKeyword_1_93()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumTurquoiseKeyword_1_94()); }

	MediumTurquoise 

{ after(grammarAccess.getColorAccess().getMediumTurquoiseKeyword_1_94()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumVioletRedKeyword_1_95()); }

	MediumVioletRed 

{ after(grammarAccess.getColorAccess().getMediumVioletRedKeyword_1_95()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMidnightBlueKeyword_1_96()); }

	MidnightBlue 

{ after(grammarAccess.getColorAccess().getMidnightBlueKeyword_1_96()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMintCreamKeyword_1_97()); }

	MintCream 

{ after(grammarAccess.getColorAccess().getMintCreamKeyword_1_97()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMistyRoseKeyword_1_98()); }

	MistyRose 

{ after(grammarAccess.getColorAccess().getMistyRoseKeyword_1_98()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMoccasinKeyword_1_99()); }

	Moccasin 

{ after(grammarAccess.getColorAccess().getMoccasinKeyword_1_99()); }
)

    |(
{ before(grammarAccess.getColorAccess().getNavajoWhiteKeyword_1_100()); }

	NavajoWhite 

{ after(grammarAccess.getColorAccess().getNavajoWhiteKeyword_1_100()); }
)

    |(
{ before(grammarAccess.getColorAccess().getNavyKeyword_1_101()); }

	Navy 

{ after(grammarAccess.getColorAccess().getNavyKeyword_1_101()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOldLaceKeyword_1_102()); }

	OldLace 

{ after(grammarAccess.getColorAccess().getOldLaceKeyword_1_102()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOliveKeyword_1_103()); }

	Olive 

{ after(grammarAccess.getColorAccess().getOliveKeyword_1_103()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOliveDrabKeyword_1_104()); }

	OliveDrab 

{ after(grammarAccess.getColorAccess().getOliveDrabKeyword_1_104()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOrangeRedKeyword_1_105()); }

	OrangeRed 

{ after(grammarAccess.getColorAccess().getOrangeRedKeyword_1_105()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOrchidKeyword_1_106()); }

	Orchid 

{ after(grammarAccess.getColorAccess().getOrchidKeyword_1_106()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPaleGoldenRodKeyword_1_107()); }

	PaleGoldenRod 

{ after(grammarAccess.getColorAccess().getPaleGoldenRodKeyword_1_107()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPaleGreenKeyword_1_108()); }

	PaleGreen 

{ after(grammarAccess.getColorAccess().getPaleGreenKeyword_1_108()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPaleTurquoiseKeyword_1_109()); }

	PaleTurquoise 

{ after(grammarAccess.getColorAccess().getPaleTurquoiseKeyword_1_109()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPaleVioletRedKeyword_1_110()); }

	PaleVioletRed 

{ after(grammarAccess.getColorAccess().getPaleVioletRedKeyword_1_110()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPapayaWhipKeyword_1_111()); }

	PapayaWhip 

{ after(grammarAccess.getColorAccess().getPapayaWhipKeyword_1_111()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPeachPuffKeyword_1_112()); }

	PeachPuff 

{ after(grammarAccess.getColorAccess().getPeachPuffKeyword_1_112()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPeruKeyword_1_113()); }

	Peru 

{ after(grammarAccess.getColorAccess().getPeruKeyword_1_113()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPinkKeyword_1_114()); }

	Pink 

{ after(grammarAccess.getColorAccess().getPinkKeyword_1_114()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPlumKeyword_1_115()); }

	Plum 

{ after(grammarAccess.getColorAccess().getPlumKeyword_1_115()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPowderBlueKeyword_1_116()); }

	PowderBlue 

{ after(grammarAccess.getColorAccess().getPowderBlueKeyword_1_116()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPurpleKeyword_1_117()); }

	Purple 

{ after(grammarAccess.getColorAccess().getPurpleKeyword_1_117()); }
)

    |(
{ before(grammarAccess.getColorAccess().getRedKeyword_1_118()); }

	Red 

{ after(grammarAccess.getColorAccess().getRedKeyword_1_118()); }
)

    |(
{ before(grammarAccess.getColorAccess().getRosyBrownKeyword_1_119()); }

	RosyBrown 

{ after(grammarAccess.getColorAccess().getRosyBrownKeyword_1_119()); }
)

    |(
{ before(grammarAccess.getColorAccess().getRoyalBlueKeyword_1_120()); }

	RoyalBlue 

{ after(grammarAccess.getColorAccess().getRoyalBlueKeyword_1_120()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSaddleBrownKeyword_1_121()); }

	SaddleBrown 

{ after(grammarAccess.getColorAccess().getSaddleBrownKeyword_1_121()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSalmonKeyword_1_122()); }

	Salmon 

{ after(grammarAccess.getColorAccess().getSalmonKeyword_1_122()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSandyBrownKeyword_1_123()); }

	SandyBrown 

{ after(grammarAccess.getColorAccess().getSandyBrownKeyword_1_123()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSeaGreenKeyword_1_124()); }

	SeaGreen 

{ after(grammarAccess.getColorAccess().getSeaGreenKeyword_1_124()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSiennaKeyword_1_125()); }

	Sienna 

{ after(grammarAccess.getColorAccess().getSiennaKeyword_1_125()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSilverKeyword_1_126()); }

	Silver 

{ after(grammarAccess.getColorAccess().getSilverKeyword_1_126()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSkyBlueKeyword_1_127()); }

	SkyBlue 

{ after(grammarAccess.getColorAccess().getSkyBlueKeyword_1_127()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSlateBlueKeyword_1_128()); }

	SlateBlue 

{ after(grammarAccess.getColorAccess().getSlateBlueKeyword_1_128()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSlateGrayKeyword_1_129()); }

	SlateGray 

{ after(grammarAccess.getColorAccess().getSlateGrayKeyword_1_129()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSlateGreyKeyword_1_130()); }

	SlateGrey 

{ after(grammarAccess.getColorAccess().getSlateGreyKeyword_1_130()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSnowKeyword_1_131()); }

	Snow 

{ after(grammarAccess.getColorAccess().getSnowKeyword_1_131()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSpringGreenKeyword_1_132()); }

	SpringGreen 

{ after(grammarAccess.getColorAccess().getSpringGreenKeyword_1_132()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSteelBlueKeyword_1_133()); }

	SteelBlue 

{ after(grammarAccess.getColorAccess().getSteelBlueKeyword_1_133()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTanKeyword_1_134()); }

	Tan 

{ after(grammarAccess.getColorAccess().getTanKeyword_1_134()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTealKeyword_1_135()); }

	Teal 

{ after(grammarAccess.getColorAccess().getTealKeyword_1_135()); }
)

    |(
{ before(grammarAccess.getColorAccess().getThistleKeyword_1_136()); }

	Thistle 

{ after(grammarAccess.getColorAccess().getThistleKeyword_1_136()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTomatoKeyword_1_137()); }

	Tomato 

{ after(grammarAccess.getColorAccess().getTomatoKeyword_1_137()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTurquoiseKeyword_1_138()); }

	Turquoise 

{ after(grammarAccess.getColorAccess().getTurquoiseKeyword_1_138()); }
)

    |(
{ before(grammarAccess.getColorAccess().getVioletKeyword_1_139()); }

	Violet 

{ after(grammarAccess.getColorAccess().getVioletKeyword_1_139()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWheatKeyword_1_140()); }

	Wheat 

{ after(grammarAccess.getColorAccess().getWheatKeyword_1_140()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWhiteKeyword_1_141()); }

	White 

{ after(grammarAccess.getColorAccess().getWhiteKeyword_1_141()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWhiteSmokeKeyword_1_142()); }

	WhiteSmoke 

{ after(grammarAccess.getColorAccess().getWhiteSmokeKeyword_1_142()); }
)

    |(
{ before(grammarAccess.getColorAccess().getYellowKeyword_1_143()); }

	Yellow 

{ after(grammarAccess.getColorAccess().getYellowKeyword_1_143()); }
)

    |(
{ before(grammarAccess.getColorAccess().getYellowGreenKeyword_1_144()); }

	YellowGreen 

{ after(grammarAccess.getColorAccess().getYellowGreenKeyword_1_144()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getRightKeyword_1_0()); }

	Right 

{ after(grammarAccess.getLegendAccess().getRightKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getLegendAccess().getLeftKeyword_1_1()); }

	Left 

{ after(grammarAccess.getLegendAccess().getLeftKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getLegendAccess().getCenterKeyword_1_2()); }

	Center 

{ after(grammarAccess.getLegendAccess().getCenterKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getOptKeyword_1_0()); }

	Opt 

{ after(grammarAccess.getGroupingMessagesAccess().getOptKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getLoopKeyword_1_1()); }

	Loop 

{ after(grammarAccess.getGroupingMessagesAccess().getLoopKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getParKeyword_1_2()); }

	Par 

{ after(grammarAccess.getGroupingMessagesAccess().getParKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getBreakKeyword_1_3()); }

	Break 

{ after(grammarAccess.getGroupingMessagesAccess().getBreakKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getCriticalKeyword_1_4()); }

	Critical 

{ after(grammarAccess.getGroupingMessagesAccess().getCriticalKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getGroupKeyword_1_5()); }

	Group 

{ after(grammarAccess.getGroupingMessagesAccess().getGroupKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_2_0()); }
(rule__Note__Group_2_0__0)
{ after(grammarAccess.getNoteAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_2_1()); }
(rule__Note__Group_2_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_2_2()); }
(rule__Note__Group_2_2__0)
{ after(grammarAccess.getNoteAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_4_0()); }
(rule__Note__Group_4_0__0)
{ after(grammarAccess.getNoteAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_4_1()); }
(rule__Note__Group_4_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_4_0()); }
(rule__Reference__Group_4_0__0)
{ after(grammarAccess.getReferenceAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getReferenceAccess().getGroup_4_1()); }
(rule__Reference__Group_4_1__0)
{ after(grammarAccess.getReferenceAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineVerticalLineKeyword_0()); }

	VerticalLineVerticalLineVerticalLine 

{ after(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineVerticalLineKeyword_0()); }
)

    |(
{ before(grammarAccess.getSpaceAccess().getGroup_1()); }
(rule__Space__Group_1__0)
{ after(grammarAccess.getSpaceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getDeactivateKeyword_0_0()); }

	Deactivate 

{ after(grammarAccess.getDeactivateAccess().getDeactivateKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDeactivateAccess().getDestroyKeyword_0_1()); }

	Destroy 

{ after(grammarAccess.getDeactivateAccess().getDestroyKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Diagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__0__Impl
	rule__Diagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getDiagramAction_0()); }
(

)
{ after(grammarAccess.getDiagramAccess().getDiagramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__1__Impl
	rule__Diagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getSTARTTerminalRuleCall_1()); }
	RULE_START
{ after(grammarAccess.getDiagramAccess().getSTARTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__2__Impl
	rule__Diagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__3__Impl
	rule__Diagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getInstructionsAssignment_3()); }
(rule__Diagram__InstructionsAssignment_3)*
{ after(grammarAccess.getDiagramAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__4__Impl
	rule__Diagram__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getENDTerminalRuleCall_4()); }
	RULE_END
{ after(grammarAccess.getDiagramAccess().getENDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_5()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Instruction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group__0__Impl
	rule__Instruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives_0()); }
(rule__Instruction__Alternatives_0)?
{ after(grammarAccess.getInstructionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getNEWLINETerminalRuleCall_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getInstructionAccess().getNEWLINETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instruction__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0_1__0__Impl
	rule__Instruction__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getDefinitionParserRuleCall_0_1_0()); }
	ruleDefinition
{ after(grammarAccess.getInstructionAccess().getDefinitionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getColorParserRuleCall_0_1_1()); }
(	ruleColor)?
{ after(grammarAccess.getInstructionAccess().getColorParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arrow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__0__Impl
	rule__Arrow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getNameAssignment_0()); }
(rule__Arrow__NameAssignment_0)
{ after(grammarAccess.getArrowAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__1__Impl
	rule__Arrow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSEQUENCETerminalRuleCall_1()); }
	RULE_SEQUENCE
{ after(grammarAccess.getArrowAccess().getSEQUENCETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__2__Impl
	rule__Arrow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getNameAssignment_2()); }
(rule__Arrow__NameAssignment_2)
{ after(grammarAccess.getArrowAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getGroup_3()); }
(rule__Arrow__Group_3__0)?
{ after(grammarAccess.getArrowAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Arrow__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__0__Impl
	rule__Arrow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getColonKeyword_3_0()); }

	Colon 

{ after(grammarAccess.getArrowAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIDTerminalRuleCall_3_1()); }
(	RULE_ID)*
{ after(grammarAccess.getArrowAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_0__0__Impl
	rule__Definition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getActorKeyword_0_0()); }

	Actor 

{ after(grammarAccess.getDefinitionAccess().getActorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_0_1()); }
(rule__Definition__NameAssignment_0_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__0__Impl
	rule__Definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBoundaryKeyword_1_0()); }

	Boundary 

{ after(grammarAccess.getDefinitionAccess().getBoundaryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1_1()); }
(rule__Definition__NameAssignment_1_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__0__Impl
	rule__Definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getControlKeyword_2_0()); }

	Control 

{ after(grammarAccess.getDefinitionAccess().getControlKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_2_1()); }
(rule__Definition__NameAssignment_2_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_3__0__Impl
	rule__Definition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getEntityKeyword_3_0()); }

	Entity 

{ after(grammarAccess.getDefinitionAccess().getEntityKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_3_1()); }
(rule__Definition__NameAssignment_3_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_4__0__Impl
	rule__Definition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getDatabaseKeyword_4_0()); }

	Database 

{ after(grammarAccess.getDefinitionAccess().getDatabaseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_4_1()); }
(rule__Definition__NameAssignment_4_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5__0__Impl
	rule__Definition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getParticipantKeyword_5_0()); }

	Participant 

{ after(grammarAccess.getDefinitionAccess().getParticipantKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5__1__Impl
	rule__Definition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_5_1()); }
(rule__Definition__NameAssignment_5_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_5_2()); }
(rule__Definition__Group_5_2__0)?
{ after(grammarAccess.getDefinitionAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2__0__Impl
	rule__Definition__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLessThanSignLessThanSignKeyword_5_2_0()); }

	LessThanSignLessThanSign 

{ after(grammarAccess.getDefinitionAccess().getLessThanSignLessThanSignKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2__1__Impl
	rule__Definition__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives_5_2_1()); }
(rule__Definition__Alternatives_5_2_1)
{ after(grammarAccess.getDefinitionAccess().getAlternatives_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGreaterThanSignGreaterThanSignKeyword_5_2_2()); }

	GreaterThanSignGreaterThanSign 

{ after(grammarAccess.getDefinitionAccess().getGreaterThanSignGreaterThanSignKeyword_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group_5_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__0__Impl
	rule__Definition__Group_5_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__1__Impl
	rule__Definition__Group_5_2_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_0_1()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__2__Impl
	rule__Definition__Group_5_2_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_0_2()); }

	Comma 

{ after(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__3__Impl
	rule__Definition__Group_5_2_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getColorParserRuleCall_5_2_1_0_3()); }
	ruleColor
{ after(grammarAccess.getDefinitionAccess().getColorParserRuleCall_5_2_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_0_4()); }

	RightParenthesis 

{ after(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Definition__Group_5_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__0__Impl
	rule__Definition__Group_5_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_1_0()); }

	LeftParenthesis 

{ after(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__1__Impl
	rule__Definition__Group_5_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_1()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__2__Impl
	rule__Definition__Group_5_2_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_1_2()); }

	Comma 

{ after(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__3__Impl
	rule__Definition__Group_5_2_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getColorParserRuleCall_5_2_1_1_3()); }
	ruleColor
{ after(grammarAccess.getDefinitionAccess().getColorParserRuleCall_5_2_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__4__Impl
	rule__Definition__Group_5_2_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_1_4()); }

	RightParenthesis 

{ after(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_5()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AutoNumber__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group__0__Impl
	rule__AutoNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getAutonumberKeyword_0()); }

	Autonumber 

{ after(grammarAccess.getAutoNumberAccess().getAutonumberKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AutoNumber__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getGroup_1()); }
(rule__AutoNumber__Group_1__0)?
{ after(grammarAccess.getAutoNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AutoNumber__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group_1__0__Impl
	rule__AutoNumber__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AutoNumber__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_1()); }
(	RULE_INT)?
{ after(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Color__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__0__Impl
	rule__Color__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getNumberSignKeyword_0()); }

	NumberSign 

{ after(grammarAccess.getColorAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Color__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Color__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAlternatives_1()); }
(rule__Color__Alternatives_1)
{ after(grammarAccess.getColorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Title__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Title__Group__0__Impl
	rule__Title__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleAccess().getTitleKeyword_0()); }

	Title 

{ after(grammarAccess.getTitleAccess().getTitleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Title__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Title__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getTitleAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Legend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__0__Impl
	rule__Legend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getLegendKeyword_0()); }

	Legend 

{ after(grammarAccess.getLegendAccess().getLegendKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__1__Impl
	rule__Legend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getAlternatives_1()); }
(rule__Legend__Alternatives_1)?
{ after(grammarAccess.getLegendAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__2__Impl
	rule__Legend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getGroup_2()); }
(rule__Legend__Group_2__0)*
{ after(grammarAccess.getLegendAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getEndlegendKeyword_3()); }

	Endlegend 

{ after(grammarAccess.getLegendAccess().getEndlegendKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Legend__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group_2__0__Impl
	rule__Legend__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getNEWLINETerminalRuleCall_2_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getLegendAccess().getNEWLINETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getIDTerminalRuleCall_2_1()); }
(	RULE_ID)*
{ after(grammarAccess.getLegendAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Newpage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Newpage__Group__0__Impl
	rule__Newpage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Newpage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewpageAccess().getNewpageKeyword_0()); }

	Newpage 

{ after(grammarAccess.getNewpageAccess().getNewpageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Newpage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Newpage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Newpage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewpageAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getNewpageAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AltElse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__0__Impl
	rule__AltElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getAltElseAction_0()); }
(

)
{ after(grammarAccess.getAltElseAccess().getAltElseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__1__Impl
	rule__AltElse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getAltKeyword_1()); }

	Alt 

{ after(grammarAccess.getAltElseAccess().getAltKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__2__Impl
	rule__AltElse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getIDTerminalRuleCall_2()); }
(	RULE_ID)*
{ after(grammarAccess.getAltElseAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__3__Impl
	rule__AltElse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getNEWLINETerminalRuleCall_3()); }
	RULE_NEWLINE
{ after(grammarAccess.getAltElseAccess().getNEWLINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__4__Impl
	rule__AltElse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getInstructionsAssignment_4()); }
(rule__AltElse__InstructionsAssignment_4)*
{ after(grammarAccess.getAltElseAccess().getInstructionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__5__Impl
	rule__AltElse__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getElsesAssignment_5()); }
(rule__AltElse__ElsesAssignment_5)*
{ after(grammarAccess.getAltElseAccess().getElsesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getEndKeyword_6()); }

	End 

{ after(grammarAccess.getAltElseAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Else__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__0__Impl
	rule__Else__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseAction_0()); }
(

)
{ after(grammarAccess.getElseAccess().getElseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__1__Impl
	rule__Else__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseKeyword_1()); }

	Else 

{ after(grammarAccess.getElseAccess().getElseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__2__Impl
	rule__Else__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getIDTerminalRuleCall_2()); }
(	RULE_ID)*
{ after(grammarAccess.getElseAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__3__Impl
	rule__Else__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getNEWLINETerminalRuleCall_3()); }
	RULE_NEWLINE
{ after(grammarAccess.getElseAccess().getNEWLINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getInstructionsAssignment_4()); }
(rule__Else__InstructionsAssignment_4)*
{ after(grammarAccess.getElseAccess().getInstructionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GroupingMessages__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__0__Impl
	rule__GroupingMessages__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getGroupingMessageAction_0()); }
(

)
{ after(grammarAccess.getGroupingMessagesAccess().getGroupingMessageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__1__Impl
	rule__GroupingMessages__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getAlternatives_1()); }
(rule__GroupingMessages__Alternatives_1)
{ after(grammarAccess.getGroupingMessagesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__2__Impl
	rule__GroupingMessages__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getIDTerminalRuleCall_2()); }
(	RULE_ID)*
{ after(grammarAccess.getGroupingMessagesAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__3__Impl
	rule__GroupingMessages__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getNEWLINETerminalRuleCall_3()); }
	RULE_NEWLINE
{ after(grammarAccess.getGroupingMessagesAccess().getNEWLINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__4__Impl
	rule__GroupingMessages__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getInstructionsAssignment_4()); }
(rule__GroupingMessages__InstructionsAssignment_4)*
{ after(grammarAccess.getGroupingMessagesAccess().getInstructionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getEndKeyword_5()); }

	End 

{ after(grammarAccess.getGroupingMessagesAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Note__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteAction_0()); }
(

)
{ after(grammarAccess.getNoteAccess().getNoteAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__1__Impl
	rule__Note__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteKeyword_1()); }

	Note 

{ after(grammarAccess.getNoteAccess().getNoteKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__2__Impl
	rule__Note__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAlternatives_2()); }
(rule__Note__Alternatives_2)
{ after(grammarAccess.getNoteAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__3__Impl
	rule__Note__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getColorParserRuleCall_3()); }
(	ruleColor)*
{ after(grammarAccess.getNoteAccess().getColorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAlternatives_4()); }
(rule__Note__Alternatives_4)
{ after(grammarAccess.getNoteAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Note__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0__0__Impl
	rule__Note__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRightKeyword_2_0_0()); }

	Right 

{ after(grammarAccess.getNoteAccess().getRightKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_2_0_1()); }
(rule__Note__Group_2_0_1__0)?
{ after(grammarAccess.getNoteAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0_1__0__Impl
	rule__Note__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfKeyword_2_0_1_0()); }

	Of 

{ after(grammarAccess.getNoteAccess().getOfKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0_1__1__Impl
	rule__Note__Group_2_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidAssignment_2_0_1_1()); }
(rule__Note__RidAssignment_2_0_1_1)
{ after(grammarAccess.getNoteAccess().getRidAssignment_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_2_0_1_2()); }
(rule__Note__Group_2_0_1_2__0)*
{ after(grammarAccess.getNoteAccess().getGroup_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_2_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0_1_2__0__Impl
	rule__Note__Group_2_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCommaKeyword_2_0_1_2_0()); }

	Comma 

{ after(grammarAccess.getNoteAccess().getCommaKeyword_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidsAssignment_2_0_1_2_1()); }
(rule__Note__RidsAssignment_2_0_1_2_1)
{ after(grammarAccess.getNoteAccess().getRidsAssignment_2_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1__0__Impl
	rule__Note__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLeftKeyword_2_1_0()); }

	Left 

{ after(grammarAccess.getNoteAccess().getLeftKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_2_1_1()); }
(rule__Note__Group_2_1_1__0)?
{ after(grammarAccess.getNoteAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1_1__0__Impl
	rule__Note__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfKeyword_2_1_1_0()); }

	Of 

{ after(grammarAccess.getNoteAccess().getOfKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1_1__1__Impl
	rule__Note__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidAssignment_2_1_1_1()); }
(rule__Note__LidAssignment_2_1_1_1)
{ after(grammarAccess.getNoteAccess().getLidAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_2_1_1_2()); }
(rule__Note__Group_2_1_1_2__0)*
{ after(grammarAccess.getNoteAccess().getGroup_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_2_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1_1_2__0__Impl
	rule__Note__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCommaKeyword_2_1_1_2_0()); }

	Comma 

{ after(grammarAccess.getNoteAccess().getCommaKeyword_2_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidsAssignment_2_1_1_2_1()); }
(rule__Note__LidsAssignment_2_1_1_2_1)
{ after(grammarAccess.getNoteAccess().getLidsAssignment_2_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_2__0__Impl
	rule__Note__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOverKeyword_2_2_0()); }

	Over 

{ after(grammarAccess.getNoteAccess().getOverKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_2__1__Impl
	rule__Note__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidAssignment_2_2_1()); }
(rule__Note__OidAssignment_2_2_1)
{ after(grammarAccess.getNoteAccess().getOidAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_2_2_2()); }
(rule__Note__Group_2_2_2__0)*
{ after(grammarAccess.getNoteAccess().getGroup_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_2_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_2_2__0__Impl
	rule__Note__Group_2_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCommaKeyword_2_2_2_0()); }

	Comma 

{ after(grammarAccess.getNoteAccess().getCommaKeyword_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_2_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_2_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_2_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidsAssignment_2_2_2_1()); }
(rule__Note__OidsAssignment_2_2_2_1)
{ after(grammarAccess.getNoteAccess().getOidsAssignment_2_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_0__0__Impl
	rule__Note__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getColonKeyword_4_0_0()); }

	Colon 

{ after(grammarAccess.getNoteAccess().getColonKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getIDTerminalRuleCall_4_0_1()); }
	RULE_ID
{ after(grammarAccess.getNoteAccess().getIDTerminalRuleCall_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_1__0__Impl
	rule__Note__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_4_1_0()); }
(rule__Note__Group_4_1_0__0)*
{ after(grammarAccess.getNoteAccess().getGroup_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_1__1__Impl
	rule__Note__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_4_1_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_1__2__Impl
	rule__Note__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEndKeyword_4_1_2()); }

	End 

{ after(grammarAccess.getNoteAccess().getEndKeyword_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteKeyword_4_1_3()); }

	Note 

{ after(grammarAccess.getNoteAccess().getNoteKeyword_4_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Note__Group_4_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_1_0__0__Impl
	rule__Note__Group_4_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_4_1_0_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_4_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_4_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_4_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getIDTerminalRuleCall_4_1_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getNoteAccess().getIDTerminalRuleCall_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Divider__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Divider__Group__0__Impl
	rule__Divider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Divider__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_0()); }

	EqualsSignEqualsSign 

{ after(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Divider__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Divider__Group__1__Impl
	rule__Divider__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Divider__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDividerAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getDividerAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Divider__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Divider__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Divider__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_2()); }

	EqualsSignEqualsSign 

{ after(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefKeyword_0()); }

	Ref 

{ after(grammarAccess.getReferenceAccess().getRefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOverKeyword_1()); }

	Over 

{ after(grammarAccess.getReferenceAccess().getOverKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdAssignment_2()); }
(rule__Reference__IdAssignment_2)
{ after(grammarAccess.getReferenceAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__3__Impl
	rule__Reference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_3()); }
(rule__Reference__Group_3__0)*
{ after(grammarAccess.getReferenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getAlternatives_4()); }
(rule__Reference__Alternatives_4)
{ after(grammarAccess.getReferenceAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Reference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_3__0__Impl
	rule__Reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getReferenceAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdsAssignment_3_1()); }
(rule__Reference__IdsAssignment_3_1)
{ after(grammarAccess.getReferenceAccess().getIdsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_0__0__Impl
	rule__Reference__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getColonKeyword_4_0_0()); }

	Colon 

{ after(grammarAccess.getReferenceAccess().getColonKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1__0__Impl
	rule__Reference__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_4_1_0()); }
(rule__Reference__Group_4_1_0__0)*
{ after(grammarAccess.getReferenceAccess().getGroup_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1__1__Impl
	rule__Reference__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getEndKeyword_4_1_1()); }

	End 

{ after(grammarAccess.getReferenceAccess().getEndKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefKeyword_4_1_2()); }

	Ref 

{ after(grammarAccess.getReferenceAccess().getRefKeyword_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Reference__Group_4_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1_0__0__Impl
	rule__Reference__Group_4_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNEWLINETerminalRuleCall_4_1_0_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getReferenceAccess().getNEWLINETerminalRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_1_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__0__Impl
	rule__Delay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_0()); }

	FullStopFullStopFullStop 

{ after(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getGroup_1()); }
(rule__Delay__Group_1__0)?
{ after(grammarAccess.getDelayAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delay__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group_1__0__Impl
	rule__Delay__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getIDTerminalRuleCall_1_0()); }
(	RULE_ID)*
{ after(grammarAccess.getDelayAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_1_1()); }

	FullStopFullStopFullStop 

{ after(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Space__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Space__Group_1__0__Impl
	rule__Space__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	VerticalLineVerticalLine 

{ after(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Space__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Space__Group_1__1__Impl
	rule__Space__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getSpaceAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Space__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Space__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_2()); }

	VerticalLineVerticalLine 

{ after(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Hidefootbox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hidefootbox__Group__0__Impl
	rule__Hidefootbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hidefootbox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHidefootboxAccess().getHideKeyword_0()); }

	Hide 

{ after(grammarAccess.getHidefootboxAccess().getHideKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hidefootbox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hidefootbox__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hidefootbox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHidefootboxAccess().getFootboxKeyword_1()); }

	Footbox 

{ after(grammarAccess.getHidefootboxAccess().getFootboxKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Activate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activate__Group__0__Impl
	rule__Activate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getActivateKeyword_0()); }

	Activate 

{ after(grammarAccess.getActivateAccess().getActivateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activate__Group__1__Impl
	rule__Activate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getColorParserRuleCall_1()); }
(	ruleColor)?
{ after(grammarAccess.getActivateAccess().getColorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getNameAssignment_2()); }
(rule__Activate__NameAssignment_2)
{ after(grammarAccess.getActivateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Deactivate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deactivate__Group__0__Impl
	rule__Deactivate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getAlternatives_0()); }
(rule__Deactivate__Alternatives_0)
{ after(grammarAccess.getDeactivateAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Deactivate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deactivate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getIdAssignment_1()); }
(rule__Deactivate__IdAssignment_1)
{ after(grammarAccess.getDeactivateAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantCreation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCreation__Group__0__Impl
	rule__ParticipantCreation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCreation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCreationAccess().getCreateKeyword_0()); }

	Create 

{ after(grammarAccess.getParticipantCreationAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCreation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCreation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCreation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCreationAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getParticipantCreationAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Box__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getBoxAction_0()); }
(

)
{ after(grammarAccess.getBoxAccess().getBoxAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getBoxKeyword_1()); }

	Box 

{ after(grammarAccess.getBoxAccess().getBoxKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getQuotationMarkKeyword_2()); }

	QuotationMark 

{ after(grammarAccess.getBoxAccess().getQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getIDTerminalRuleCall_3()); }
(	RULE_ID)*
{ after(grammarAccess.getBoxAccess().getIDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__4__Impl
	rule__Box__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getQuotationMarkKeyword_4()); }

	QuotationMark 

{ after(grammarAccess.getBoxAccess().getQuotationMarkKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__5__Impl
	rule__Box__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getColorParserRuleCall_5()); }
(	ruleColor)?
{ after(grammarAccess.getBoxAccess().getColorParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__6__Impl
	rule__Box__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_6()); }
	RULE_NEWLINE
{ after(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__7__Impl
	rule__Box__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getGroup_7()); }
(rule__Box__Group_7__0)*
{ after(grammarAccess.getBoxAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__8__Impl
	rule__Box__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getEndKeyword_8()); }

	End 

{ after(grammarAccess.getBoxAccess().getEndKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getBoxKeyword_9()); }

	Box 

{ after(grammarAccess.getBoxAccess().getBoxKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Box__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group_7__0__Impl
	rule__Box__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getDefinitionsAssignment_7_0()); }
(rule__Box__DefinitionsAssignment_7_0)?
{ after(grammarAccess.getBoxAccess().getDefinitionsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_7_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DiagramsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDiagramsDiagramParserRuleCall_0()); }
	ruleDiagram{ after(grammarAccess.getModelAccess().getDiagramsDiagramParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getDiagramAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArrowAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getArrowAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_5_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__InstructionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getInstructionsInstructionParserRuleCall_4_0()); }
	ruleInstruction{ after(grammarAccess.getAltElseAccess().getInstructionsInstructionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__ElsesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getElsesElseParserRuleCall_5_0()); }
	ruleElse{ after(grammarAccess.getAltElseAccess().getElsesElseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Else__InstructionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getInstructionsInstructionParserRuleCall_4_0()); }
	ruleInstruction{ after(grammarAccess.getElseAccess().getInstructionsInstructionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__InstructionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getInstructionsInstructionParserRuleCall_4_0()); }
	ruleInstruction{ after(grammarAccess.getGroupingMessagesAccess().getInstructionsInstructionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__RidAssignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidDefinitionCrossReference_2_0_1_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getRidDefinitionIDTerminalRuleCall_2_0_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getRidDefinitionIDTerminalRuleCall_2_0_1_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getRidDefinitionCrossReference_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__RidsAssignment_2_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidsDefinitionCrossReference_2_0_1_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getRidsDefinitionIDTerminalRuleCall_2_0_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getRidsDefinitionIDTerminalRuleCall_2_0_1_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getRidsDefinitionCrossReference_2_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__LidAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidDefinitionCrossReference_2_1_1_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getLidDefinitionIDTerminalRuleCall_2_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getLidDefinitionIDTerminalRuleCall_2_1_1_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getLidDefinitionCrossReference_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__LidsAssignment_2_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidsDefinitionCrossReference_2_1_1_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getLidsDefinitionIDTerminalRuleCall_2_1_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getLidsDefinitionIDTerminalRuleCall_2_1_1_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getLidsDefinitionCrossReference_2_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OidAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidDefinitionCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getOidDefinitionIDTerminalRuleCall_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getOidDefinitionIDTerminalRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getOidDefinitionCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OidsAssignment_2_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidsDefinitionCrossReference_2_2_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getOidsDefinitionIDTerminalRuleCall_2_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getOidsDefinitionIDTerminalRuleCall_2_2_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getOidsDefinitionCrossReference_2_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getReferenceAccess().getIdDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getIdDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getIdDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__IdsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdsDefinitionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getReferenceAccess().getIdsDefinitionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getIdsDefinitionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getIdsDefinitionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getActivateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getIdActivateCrossReference_1_0()); }
(
{ before(grammarAccess.getDeactivateAccess().getIdActivateIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDeactivateAccess().getIdActivateIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDeactivateAccess().getIdActivateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Box__DefinitionsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getDefinitionsDefinitionParserRuleCall_7_0_0()); }
	ruleDefinition{ after(grammarAccess.getBoxAccess().getDefinitionsDefinitionParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


