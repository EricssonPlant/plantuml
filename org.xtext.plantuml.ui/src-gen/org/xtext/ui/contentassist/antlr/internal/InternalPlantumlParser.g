/*
 * generated by Xtext
 */
parser grammar InternalPlantumlParser;

options {
	tokenVocab=InternalPlantumlLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.PlantumlGrammarAccess;

}

@members {
 
 	private PlantumlGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("QuotationMark", "'\"'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSignLessThanSign", "'<<'");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("GreaterThanSignGreaterThanSign", "'>>'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
		tokenNameToValue.put("FullStopFullStopFullStop", "'...'");
		tokenNameToValue.put("Alt", "'alt'");
		tokenNameToValue.put("Box", "'box'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("Opt", "'opt'");
		tokenNameToValue.put("Par", "'par'");
		tokenNameToValue.put("Ref", "'ref'");
		tokenNameToValue.put("VerticalLineVerticalLineVerticalLine", "'|||'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Hide", "'hide'");
		tokenNameToValue.put("Left", "'left'");
		tokenNameToValue.put("Loop", "'loop'");
		tokenNameToValue.put("Note", "'note'");
		tokenNameToValue.put("Over", "'over'");
		tokenNameToValue.put("Actor", "'actor'");
		tokenNameToValue.put("Break", "'break'");
		tokenNameToValue.put("Group", "'group'");
		tokenNameToValue.put("Right", "'right'");
		tokenNameToValue.put("Title", "'title'");
		tokenNameToValue.put("Center", "'center'");
		tokenNameToValue.put("Create", "'create'");
		tokenNameToValue.put("Entity", "'entity'");
		tokenNameToValue.put("Legend", "'legend'");
		tokenNameToValue.put("Control", "'control'");
		tokenNameToValue.put("Destroy", "'destroy'");
		tokenNameToValue.put("Footbox", "'footbox'");
		tokenNameToValue.put("Newpage", "'newpage'");
		tokenNameToValue.put("Activate", "'activate'");
		tokenNameToValue.put("Boundary", "'boundary'");
		tokenNameToValue.put("Critical", "'critical'");
		tokenNameToValue.put("Database", "'database'");
		tokenNameToValue.put("Endlegend", "'endlegend'");
		tokenNameToValue.put("Autonumber", "'autonumber'");
		tokenNameToValue.put("Deactivate", "'deactivate'");
		tokenNameToValue.put("Participant", "'participant'");
 	}
 	
    public void setGrammarAccess(PlantumlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRulePlantuml
entryRulePlantuml 
:
{ before(grammarAccess.getPlantumlRule()); }
	 rulePlantuml
{ after(grammarAccess.getPlantumlRule()); } 
	 EOF 
;

// Rule Plantuml
rulePlantuml 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlantumlAccess().getDiagramsAssignment()); }
(rule__Plantuml__DiagramsAssignment)*
{ after(grammarAccess.getPlantumlAccess().getDiagramsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDiagram
entryRuleDiagram 
:
{ before(grammarAccess.getDiagramRule()); }
	 ruleDiagram
{ after(grammarAccess.getDiagramRule()); } 
	 EOF 
;

// Rule Diagram
ruleDiagram 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDiagramAccess().getGroup()); }
(rule__Diagram__Group__0)
{ after(grammarAccess.getDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstructionAccess().getGroup()); }
(rule__Instruction__Group__0)
{ after(grammarAccess.getInstructionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrow
entryRuleArrow 
:
{ before(grammarAccess.getArrowRule()); }
	 ruleArrow
{ after(grammarAccess.getArrowRule()); } 
	 EOF 
;

// Rule Arrow
ruleArrow 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrowAccess().getGroup()); }
(rule__Arrow__Group__0)
{ after(grammarAccess.getArrowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
(rule__Definition__Alternatives)
{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAutoNumber
entryRuleAutoNumber 
:
{ before(grammarAccess.getAutoNumberRule()); }
	 ruleAutoNumber
{ after(grammarAccess.getAutoNumberRule()); } 
	 EOF 
;

// Rule AutoNumber
ruleAutoNumber 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAutoNumberAccess().getGroup()); }
(rule__AutoNumber__Group__0)
{ after(grammarAccess.getAutoNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTitle
entryRuleTitle 
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTitleAccess().getGroup()); }
(rule__Title__Group__0)
{ after(grammarAccess.getTitleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLegend
entryRuleLegend 
:
{ before(grammarAccess.getLegendRule()); }
	 ruleLegend
{ after(grammarAccess.getLegendRule()); } 
	 EOF 
;

// Rule Legend
ruleLegend 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLegendAccess().getGroup()); }
(rule__Legend__Group__0)
{ after(grammarAccess.getLegendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewpage
entryRuleNewpage 
:
{ before(grammarAccess.getNewpageRule()); }
	 ruleNewpage
{ after(grammarAccess.getNewpageRule()); } 
	 EOF 
;

// Rule Newpage
ruleNewpage 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNewpageAccess().getGroup()); }
(rule__Newpage__Group__0)
{ after(grammarAccess.getNewpageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAltElse
entryRuleAltElse 
:
{ before(grammarAccess.getAltElseRule()); }
	 ruleAltElse
{ after(grammarAccess.getAltElseRule()); } 
	 EOF 
;

// Rule AltElse
ruleAltElse 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAltElseAccess().getGroup()); }
(rule__AltElse__Group__0)
{ after(grammarAccess.getAltElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElse
entryRuleElse 
:
{ before(grammarAccess.getElseRule()); }
	 ruleElse
{ after(grammarAccess.getElseRule()); } 
	 EOF 
;

// Rule Else
ruleElse 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getElseAccess().getGroup()); }
(rule__Else__Group__0)
{ after(grammarAccess.getElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroupingMessages
entryRuleGroupingMessages 
:
{ before(grammarAccess.getGroupingMessagesRule()); }
	 ruleGroupingMessages
{ after(grammarAccess.getGroupingMessagesRule()); } 
	 EOF 
;

// Rule GroupingMessages
ruleGroupingMessages 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getGroupingMessagesAccess().getGroup()); }
(rule__GroupingMessages__Group__0)
{ after(grammarAccess.getGroupingMessagesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNote
entryRuleNote 
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoteAccess().getGroup()); }
(rule__Note__Group__0)
{ after(grammarAccess.getNoteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivider
entryRuleDivider 
:
{ before(grammarAccess.getDividerRule()); }
	 ruleDivider
{ after(grammarAccess.getDividerRule()); } 
	 EOF 
;

// Rule Divider
ruleDivider 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDividerAccess().getGroup()); }
(rule__Divider__Group__0)
{ after(grammarAccess.getDividerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelay
entryRuleDelay 
:
{ before(grammarAccess.getDelayRule()); }
	 ruleDelay
{ after(grammarAccess.getDelayRule()); } 
	 EOF 
;

// Rule Delay
ruleDelay 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDelayAccess().getGroup()); }
(rule__Delay__Group__0)
{ after(grammarAccess.getDelayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpace
entryRuleSpace 
:
{ before(grammarAccess.getSpaceRule()); }
	 ruleSpace
{ after(grammarAccess.getSpaceRule()); } 
	 EOF 
;

// Rule Space
ruleSpace 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSpaceAccess().getAlternatives()); }
(rule__Space__Alternatives)
{ after(grammarAccess.getSpaceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHidefootbox
entryRuleHidefootbox 
:
{ before(grammarAccess.getHidefootboxRule()); }
	 ruleHidefootbox
{ after(grammarAccess.getHidefootboxRule()); } 
	 EOF 
;

// Rule Hidefootbox
ruleHidefootbox 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getHidefootboxAccess().getGroup()); }
(rule__Hidefootbox__Group__0)
{ after(grammarAccess.getHidefootboxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivate
entryRuleActivate 
:
{ before(grammarAccess.getActivateRule()); }
	 ruleActivate
{ after(grammarAccess.getActivateRule()); } 
	 EOF 
;

// Rule Activate
ruleActivate 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getActivateAccess().getGroup()); }
(rule__Activate__Group__0)
{ after(grammarAccess.getActivateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeactivate
entryRuleDeactivate 
:
{ before(grammarAccess.getDeactivateRule()); }
	 ruleDeactivate
{ after(grammarAccess.getDeactivateRule()); } 
	 EOF 
;

// Rule Deactivate
ruleDeactivate 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDeactivateAccess().getGroup()); }
(rule__Deactivate__Group__0)
{ after(grammarAccess.getDeactivateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCreation
entryRuleParticipantCreation 
:
{ before(grammarAccess.getParticipantCreationRule()); }
	 ruleParticipantCreation
{ after(grammarAccess.getParticipantCreationRule()); } 
	 EOF 
;

// Rule ParticipantCreation
ruleParticipantCreation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParticipantCreationAccess().getGroup()); }
(rule__ParticipantCreation__Group__0)
{ after(grammarAccess.getParticipantCreationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBox
entryRuleBox 
:
{ before(grammarAccess.getBoxRule()); }
	 ruleBox
{ after(grammarAccess.getBoxRule()); } 
	 EOF 
;

// Rule Box
ruleBox 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBoxAccess().getGroup()); }
(rule__Box__Group__0)
{ after(grammarAccess.getBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Instruction__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getArrowParserRuleCall_0_0()); }
	ruleArrow
{ after(grammarAccess.getInstructionAccess().getArrowParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGroup_0_1()); }
(rule__Instruction__Group_0_1__0)
{ after(grammarAccess.getInstructionAccess().getGroup_0_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAutoNumberParserRuleCall_0_2()); }
	ruleAutoNumber
{ after(grammarAccess.getInstructionAccess().getAutoNumberParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getTitleParserRuleCall_0_3()); }
	ruleTitle
{ after(grammarAccess.getInstructionAccess().getTitleParserRuleCall_0_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLegendParserRuleCall_0_4()); }
	ruleLegend
{ after(grammarAccess.getInstructionAccess().getLegendParserRuleCall_0_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getNewpageParserRuleCall_0_5()); }
	ruleNewpage
{ after(grammarAccess.getInstructionAccess().getNewpageParserRuleCall_0_5()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAltElseParserRuleCall_0_6()); }
	ruleAltElse
{ after(grammarAccess.getInstructionAccess().getAltElseParserRuleCall_0_6()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGroupingMessagesParserRuleCall_0_7()); }
	ruleGroupingMessages
{ after(grammarAccess.getInstructionAccess().getGroupingMessagesParserRuleCall_0_7()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getNoteParserRuleCall_0_8()); }
	ruleNote
{ after(grammarAccess.getInstructionAccess().getNoteParserRuleCall_0_8()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDividerParserRuleCall_0_9()); }
	ruleDivider
{ after(grammarAccess.getInstructionAccess().getDividerParserRuleCall_0_9()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getReferenceParserRuleCall_0_10()); }
	ruleReference
{ after(grammarAccess.getInstructionAccess().getReferenceParserRuleCall_0_10()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDelayParserRuleCall_0_11()); }
	ruleDelay
{ after(grammarAccess.getInstructionAccess().getDelayParserRuleCall_0_11()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getSpaceParserRuleCall_0_12()); }
	ruleSpace
{ after(grammarAccess.getInstructionAccess().getSpaceParserRuleCall_0_12()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getHidefootboxParserRuleCall_0_13()); }
	ruleHidefootbox
{ after(grammarAccess.getInstructionAccess().getHidefootboxParserRuleCall_0_13()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getActivateParserRuleCall_0_14()); }
	ruleActivate
{ after(grammarAccess.getInstructionAccess().getActivateParserRuleCall_0_14()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDeactivateParserRuleCall_0_15()); }
	ruleDeactivate
{ after(grammarAccess.getInstructionAccess().getDeactivateParserRuleCall_0_15()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getParticipantCreationParserRuleCall_0_16()); }
	ruleParticipantCreation
{ after(grammarAccess.getInstructionAccess().getParticipantCreationParserRuleCall_0_16()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getBoxParserRuleCall_0_17()); }
	ruleBox
{ after(grammarAccess.getInstructionAccess().getBoxParserRuleCall_0_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getCOLORTerminalRuleCall_0_1_1_0()); }
	RULE_COLOR
{ after(grammarAccess.getInstructionAccess().getCOLORTerminalRuleCall_0_1_1_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getHEXCODETerminalRuleCall_0_1_1_1()); }
	RULE_HEXCODE
{ after(grammarAccess.getInstructionAccess().getHEXCODETerminalRuleCall_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_0()); }
(rule__Definition__Group_0__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_1()); }
(rule__Definition__Group_1__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_2()); }
(rule__Definition__Group_2__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_3()); }
(rule__Definition__Group_3__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_4()); }
(rule__Definition__Group_4__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_5()); }
(rule__Definition__Group_5__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_5_2_1_0()); }
(rule__Definition__Group_5_2_1_0__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_5_2_1_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_5_2_1_1()); }
(rule__Definition__Group_5_2_1_1__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_5_2_1_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_2()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getRightKeyword_1_0()); }

	Right 

{ after(grammarAccess.getLegendAccess().getRightKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getLegendAccess().getLeftKeyword_1_1()); }

	Left 

{ after(grammarAccess.getLegendAccess().getLeftKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getLegendAccess().getCenterKeyword_1_2()); }

	Center 

{ after(grammarAccess.getLegendAccess().getCenterKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getOptKeyword_0_0()); }

	Opt 

{ after(grammarAccess.getGroupingMessagesAccess().getOptKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getLoopKeyword_0_1()); }

	Loop 

{ after(grammarAccess.getGroupingMessagesAccess().getLoopKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getParKeyword_0_2()); }

	Par 

{ after(grammarAccess.getGroupingMessagesAccess().getParKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getBreakKeyword_0_3()); }

	Break 

{ after(grammarAccess.getGroupingMessagesAccess().getBreakKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getCriticalKeyword_0_4()); }

	Critical 

{ after(grammarAccess.getGroupingMessagesAccess().getCriticalKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getGroupingMessagesAccess().getGroupKeyword_0_5()); }

	Group 

{ after(grammarAccess.getGroupingMessagesAccess().getGroupKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_0()); }
(rule__Note__Group_1_0__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_1_1()); }
(rule__Note__Group_1_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_1_2()); }
(rule__Note__Group_1_2__0)
{ after(grammarAccess.getNoteAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_3_0()); }
(rule__Note__Group_3_0__0)
{ after(grammarAccess.getNoteAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getNoteAccess().getGroup_3_1()); }
(rule__Note__Group_3_1__0)
{ after(grammarAccess.getNoteAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_4_0()); }
(rule__Reference__Group_4_0__0)
{ after(grammarAccess.getReferenceAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getReferenceAccess().getGroup_4_1()); }
(rule__Reference__Group_4_1__0)
{ after(grammarAccess.getReferenceAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineVerticalLineKeyword_0()); }

	VerticalLineVerticalLineVerticalLine 

{ after(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineVerticalLineKeyword_0()); }
)

    |(
{ before(grammarAccess.getSpaceAccess().getGroup_1()); }
(rule__Space__Group_1__0)
{ after(grammarAccess.getSpaceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getDeactivateKeyword_0_0()); }

	Deactivate 

{ after(grammarAccess.getDeactivateAccess().getDeactivateKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDeactivateAccess().getDestroyKeyword_0_1()); }

	Destroy 

{ after(grammarAccess.getDeactivateAccess().getDestroyKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Diagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__0__Impl
	rule__Diagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getDiagramAction_0()); }
(

)
{ after(grammarAccess.getDiagramAccess().getDiagramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__1__Impl
	rule__Diagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getSTARTTerminalRuleCall_1()); }
	RULE_START
{ after(grammarAccess.getDiagramAccess().getSTARTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__2__Impl
	rule__Diagram__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__3__Impl
	rule__Diagram__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getInstructionsAssignment_3()); }
(rule__Diagram__InstructionsAssignment_3)*
{ after(grammarAccess.getDiagramAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__4__Impl
	rule__Diagram__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getENDTerminalRuleCall_4()); }
	RULE_END
{ after(grammarAccess.getDiagramAccess().getENDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_5()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getDiagramAccess().getNEWLINETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Instruction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group__0__Impl
	rule__Instruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives_0()); }
(rule__Instruction__Alternatives_0)?
{ after(grammarAccess.getInstructionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getNEWLINETerminalRuleCall_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getInstructionAccess().getNEWLINETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instruction__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0_1__0__Impl
	rule__Instruction__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getDefinitionParserRuleCall_0_1_0()); }
	ruleDefinition
{ after(grammarAccess.getInstructionAccess().getDefinitionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives_0_1_1()); }
(rule__Instruction__Alternatives_0_1_1)?
{ after(grammarAccess.getInstructionAccess().getAlternatives_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arrow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__0__Impl
	rule__Arrow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdsAssignment_0()); }
(rule__Arrow__IdsAssignment_0)
{ after(grammarAccess.getArrowAccess().getIdsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__1__Impl
	rule__Arrow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getSEQUENCETerminalRuleCall_1()); }
	RULE_SEQUENCE
{ after(grammarAccess.getArrowAccess().getSEQUENCETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__2__Impl
	rule__Arrow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdsAssignment_2()); }
(rule__Arrow__IdsAssignment_2)
{ after(grammarAccess.getArrowAccess().getIdsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getGroup_3()); }
(rule__Arrow__Group_3__0)?
{ after(grammarAccess.getArrowAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Arrow__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__0__Impl
	rule__Arrow__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getColonKeyword_3_0()); }

	Colon 

{ after(grammarAccess.getArrowAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arrow__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arrow__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIDTerminalRuleCall_3_1()); }
(	RULE_ID)*
{ after(grammarAccess.getArrowAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_0__0__Impl
	rule__Definition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getActorKeyword_0_0()); }

	Actor 

{ after(grammarAccess.getDefinitionAccess().getActorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_0_1()); }
(rule__Definition__NameAssignment_0_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__0__Impl
	rule__Definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBoundaryKeyword_1_0()); }

	Boundary 

{ after(grammarAccess.getDefinitionAccess().getBoundaryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1_1()); }
(rule__Definition__NameAssignment_1_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__0__Impl
	rule__Definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getControlKeyword_2_0()); }

	Control 

{ after(grammarAccess.getDefinitionAccess().getControlKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_2_1()); }
(rule__Definition__NameAssignment_2_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_3__0__Impl
	rule__Definition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getEntityKeyword_3_0()); }

	Entity 

{ after(grammarAccess.getDefinitionAccess().getEntityKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_3_1()); }
(rule__Definition__NameAssignment_3_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_4__0__Impl
	rule__Definition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getDatabaseKeyword_4_0()); }

	Database 

{ after(grammarAccess.getDefinitionAccess().getDatabaseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_4_1()); }
(rule__Definition__NameAssignment_4_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5__0__Impl
	rule__Definition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getParticipantKeyword_5_0()); }

	Participant 

{ after(grammarAccess.getDefinitionAccess().getParticipantKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5__1__Impl
	rule__Definition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_5_1()); }
(rule__Definition__NameAssignment_5_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_5_2()); }
(rule__Definition__Group_5_2__0)?
{ after(grammarAccess.getDefinitionAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2__0__Impl
	rule__Definition__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLessThanSignLessThanSignKeyword_5_2_0()); }

	LessThanSignLessThanSign 

{ after(grammarAccess.getDefinitionAccess().getLessThanSignLessThanSignKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2__1__Impl
	rule__Definition__Group_5_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives_5_2_1()); }
(rule__Definition__Alternatives_5_2_1)
{ after(grammarAccess.getDefinitionAccess().getAlternatives_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGreaterThanSignGreaterThanSignKeyword_5_2_2()); }

	GreaterThanSignGreaterThanSign 

{ after(grammarAccess.getDefinitionAccess().getGreaterThanSignGreaterThanSignKeyword_5_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Definition__Group_5_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__0__Impl
	rule__Definition__Group_5_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__1__Impl
	rule__Definition__Group_5_2_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_0_1()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__2__Impl
	rule__Definition__Group_5_2_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_0_2()); }

	Comma 

{ after(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__3__Impl
	rule__Definition__Group_5_2_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCOLORTerminalRuleCall_5_2_1_0_3()); }
	RULE_COLOR
{ after(grammarAccess.getDefinitionAccess().getCOLORTerminalRuleCall_5_2_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_0_4()); }

	RightParenthesis 

{ after(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Definition__Group_5_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__0__Impl
	rule__Definition__Group_5_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_1_0()); }

	LeftParenthesis 

{ after(grammarAccess.getDefinitionAccess().getLeftParenthesisKeyword_5_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__1__Impl
	rule__Definition__Group_5_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_1()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__2__Impl
	rule__Definition__Group_5_2_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_1_2()); }

	Comma 

{ after(grammarAccess.getDefinitionAccess().getCommaKeyword_5_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__3__Impl
	rule__Definition__Group_5_2_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCOLORTerminalRuleCall_5_2_1_1_3()); }
	RULE_COLOR
{ after(grammarAccess.getDefinitionAccess().getCOLORTerminalRuleCall_5_2_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__4__Impl
	rule__Definition__Group_5_2_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_1_4()); }

	RightParenthesis 

{ after(grammarAccess.getDefinitionAccess().getRightParenthesisKeyword_5_2_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_2_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_5_2_1_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_2_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_5()); }
	RULE_ID
{ after(grammarAccess.getDefinitionAccess().getIDTerminalRuleCall_5_2_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AutoNumber__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group__0__Impl
	rule__AutoNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getAutonumberKeyword_0()); }

	Autonumber 

{ after(grammarAccess.getAutoNumberAccess().getAutonumberKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AutoNumber__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getGroup_1()); }
(rule__AutoNumber__Group_1__0)?
{ after(grammarAccess.getAutoNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AutoNumber__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group_1__0__Impl
	rule__AutoNumber__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AutoNumber__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AutoNumber__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoNumber__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_1()); }
(	RULE_INT)?
{ after(grammarAccess.getAutoNumberAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Title__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Title__Group__0__Impl
	rule__Title__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleAccess().getTitleKeyword_0()); }

	Title 

{ after(grammarAccess.getTitleAccess().getTitleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Title__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Title__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getTitleAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Legend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__0__Impl
	rule__Legend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getLegendKeyword_0()); }

	Legend 

{ after(grammarAccess.getLegendAccess().getLegendKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__1__Impl
	rule__Legend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getAlternatives_1()); }
(rule__Legend__Alternatives_1)?
{ after(grammarAccess.getLegendAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__2__Impl
	rule__Legend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getGroup_2()); }
(rule__Legend__Group_2__0)*
{ after(grammarAccess.getLegendAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getEndlegendKeyword_3()); }

	Endlegend 

{ after(grammarAccess.getLegendAccess().getEndlegendKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Legend__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group_2__0__Impl
	rule__Legend__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getNEWLINETerminalRuleCall_2_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getLegendAccess().getNEWLINETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Legend__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Legend__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Legend__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLegendAccess().getIDTerminalRuleCall_2_1()); }
(	RULE_ID)*
{ after(grammarAccess.getLegendAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Newpage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Newpage__Group__0__Impl
	rule__Newpage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Newpage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewpageAccess().getNewpageKeyword_0()); }

	Newpage 

{ after(grammarAccess.getNewpageAccess().getNewpageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Newpage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Newpage__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Newpage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewpageAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getNewpageAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AltElse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__0__Impl
	rule__AltElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getAltKeyword_0()); }

	Alt 

{ after(grammarAccess.getAltElseAccess().getAltKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__1__Impl
	rule__AltElse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getAltElseAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__2__Impl
	rule__AltElse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getAltElseAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__3__Impl
	rule__AltElse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getInstructionsAssignment_3()); }
(rule__AltElse__InstructionsAssignment_3)*
{ after(grammarAccess.getAltElseAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__4__Impl
	rule__AltElse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getElsesAssignment_4()); }
(rule__AltElse__ElsesAssignment_4)*
{ after(grammarAccess.getAltElseAccess().getElsesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AltElse__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AltElse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getEndKeyword_5()); }

	End 

{ after(grammarAccess.getAltElseAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Else__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__0__Impl
	rule__Else__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getElseKeyword_0()); }

	Else 

{ after(grammarAccess.getElseAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__1__Impl
	rule__Else__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getElseAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__2__Impl
	rule__Else__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getElseAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Else__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Else__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Else__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getInstructionsAssignment_3()); }
(rule__Else__InstructionsAssignment_3)*
{ after(grammarAccess.getElseAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GroupingMessages__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__0__Impl
	rule__GroupingMessages__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getAlternatives_0()); }
(rule__GroupingMessages__Alternatives_0)
{ after(grammarAccess.getGroupingMessagesAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__1__Impl
	rule__GroupingMessages__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getGroupingMessagesAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__2__Impl
	rule__GroupingMessages__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getNEWLINETerminalRuleCall_2()); }
	RULE_NEWLINE
{ after(grammarAccess.getGroupingMessagesAccess().getNEWLINETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__3__Impl
	rule__GroupingMessages__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getInstructionsAssignment_3()); }
(rule__GroupingMessages__InstructionsAssignment_3)*
{ after(grammarAccess.getGroupingMessagesAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupingMessages__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupingMessages__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getEndKeyword_4()); }

	End 

{ after(grammarAccess.getGroupingMessagesAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Note__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteKeyword_0()); }

	Note 

{ after(grammarAccess.getNoteAccess().getNoteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__1__Impl
	rule__Note__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAlternatives_1()); }
(rule__Note__Alternatives_1)
{ after(grammarAccess.getNoteAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__2__Impl
	rule__Note__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCOLORTerminalRuleCall_2()); }
(	RULE_COLOR)*
{ after(grammarAccess.getNoteAccess().getCOLORTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getAlternatives_3()); }
(rule__Note__Alternatives_3)
{ after(grammarAccess.getNoteAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Note__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0__0__Impl
	rule__Note__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRightKeyword_1_0_0()); }

	Right 

{ after(grammarAccess.getNoteAccess().getRightKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_0_1()); }
(rule__Note__Group_1_0_1__0)?
{ after(grammarAccess.getNoteAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__0__Impl
	rule__Note__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfKeyword_1_0_1_0()); }

	Of 

{ after(grammarAccess.getNoteAccess().getOfKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__1__Impl
	rule__Note__Group_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidAssignment_1_0_1_1()); }
(rule__Note__RidAssignment_1_0_1_1)
{ after(grammarAccess.getNoteAccess().getRidAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_0_1_2()); }
(rule__Note__Group_1_0_1_2__0)*
{ after(grammarAccess.getNoteAccess().getGroup_1_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_1_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1_2__0__Impl
	rule__Note__Group_1_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCommaKeyword_1_0_1_2_0()); }

	Comma 

{ after(grammarAccess.getNoteAccess().getCommaKeyword_1_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidsAssignment_1_0_1_2_1()); }
(rule__Note__RidsAssignment_1_0_1_2_1)
{ after(grammarAccess.getNoteAccess().getRidsAssignment_1_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__0__Impl
	rule__Note__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLeftKeyword_1_1_0()); }

	Left 

{ after(grammarAccess.getNoteAccess().getLeftKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_1_1()); }
(rule__Note__Group_1_1_1__0)?
{ after(grammarAccess.getNoteAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1_1__0__Impl
	rule__Note__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOfKeyword_1_1_1_0()); }

	Of 

{ after(grammarAccess.getNoteAccess().getOfKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1_1__1__Impl
	rule__Note__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidAssignment_1_1_1_1()); }
(rule__Note__LidAssignment_1_1_1_1)
{ after(grammarAccess.getNoteAccess().getLidAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_1_1_2()); }
(rule__Note__Group_1_1_1_2__0)*
{ after(grammarAccess.getNoteAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1_1_2__0__Impl
	rule__Note__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCommaKeyword_1_1_1_2_0()); }

	Comma 

{ after(grammarAccess.getNoteAccess().getCommaKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidsAssignment_1_1_1_2_1()); }
(rule__Note__LidsAssignment_1_1_1_2_1)
{ after(grammarAccess.getNoteAccess().getLidsAssignment_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_2__0__Impl
	rule__Note__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOverKeyword_1_2_0()); }

	Over 

{ after(grammarAccess.getNoteAccess().getOverKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_2__1__Impl
	rule__Note__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidAssignment_1_2_1()); }
(rule__Note__OidAssignment_1_2_1)
{ after(grammarAccess.getNoteAccess().getOidAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_1_2_2()); }
(rule__Note__Group_1_2_2__0)*
{ after(grammarAccess.getNoteAccess().getGroup_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Note__Group_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_2_2__0__Impl
	rule__Note__Group_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getCommaKeyword_1_2_2_0()); }

	Comma 

{ after(grammarAccess.getNoteAccess().getCommaKeyword_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidsAssignment_1_2_2_1()); }
(rule__Note__OidsAssignment_1_2_2_1)
{ after(grammarAccess.getNoteAccess().getOidsAssignment_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_0__0__Impl
	rule__Note__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getColonKeyword_3_0_0()); }

	Colon 

{ after(grammarAccess.getNoteAccess().getColonKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getIDTerminalRuleCall_3_0_1()); }
	RULE_ID
{ after(grammarAccess.getNoteAccess().getIDTerminalRuleCall_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Note__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_1__0__Impl
	rule__Note__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getGroup_3_1_0()); }
(rule__Note__Group_3_1_0__0)*
{ after(grammarAccess.getNoteAccess().getGroup_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_1__1__Impl
	rule__Note__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_3_1_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_1__2__Impl
	rule__Note__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getEndKeyword_3_1_2()); }

	End 

{ after(grammarAccess.getNoteAccess().getEndKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNoteKeyword_3_1_3()); }

	Note 

{ after(grammarAccess.getNoteAccess().getNoteKeyword_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Note__Group_3_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_1_0__0__Impl
	rule__Note__Group_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_3_1_0_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getNoteAccess().getNEWLINETerminalRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group_3_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Note__Group_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group_3_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getIDTerminalRuleCall_3_1_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getNoteAccess().getIDTerminalRuleCall_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Divider__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Divider__Group__0__Impl
	rule__Divider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Divider__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_0()); }

	EqualsSignEqualsSign 

{ after(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Divider__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Divider__Group__1__Impl
	rule__Divider__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Divider__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDividerAccess().getIDTerminalRuleCall_1()); }
(	RULE_ID)*
{ after(grammarAccess.getDividerAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Divider__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Divider__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Divider__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_2()); }

	EqualsSignEqualsSign 

{ after(grammarAccess.getDividerAccess().getEqualsSignEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefKeyword_0()); }

	Ref 

{ after(grammarAccess.getReferenceAccess().getRefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOverKeyword_1()); }

	Over 

{ after(grammarAccess.getReferenceAccess().getOverKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdAssignment_2()); }
(rule__Reference__IdAssignment_2)
{ after(grammarAccess.getReferenceAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__3__Impl
	rule__Reference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_3()); }
(rule__Reference__Group_3__0)*
{ after(grammarAccess.getReferenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getAlternatives_4()); }
(rule__Reference__Alternatives_4)
{ after(grammarAccess.getReferenceAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Reference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_3__0__Impl
	rule__Reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getReferenceAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdsAssignment_3_1()); }
(rule__Reference__IdsAssignment_3_1)
{ after(grammarAccess.getReferenceAccess().getIdsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_0__0__Impl
	rule__Reference__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getColonKeyword_4_0_0()); }

	Colon 

{ after(grammarAccess.getReferenceAccess().getColonKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1__0__Impl
	rule__Reference__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getGroup_4_1_0()); }
(rule__Reference__Group_4_1_0__0)*
{ after(grammarAccess.getReferenceAccess().getGroup_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1__1__Impl
	rule__Reference__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getEndKeyword_4_1_1()); }

	End 

{ after(grammarAccess.getReferenceAccess().getEndKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefKeyword_4_1_2()); }

	Ref 

{ after(grammarAccess.getReferenceAccess().getRefKeyword_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Reference__Group_4_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1_0__0__Impl
	rule__Reference__Group_4_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNEWLINETerminalRuleCall_4_1_0_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getReferenceAccess().getNEWLINETerminalRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group_4_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group_4_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group_4_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_1_0_1()); }
(	RULE_ID)*
{ after(grammarAccess.getReferenceAccess().getIDTerminalRuleCall_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__0__Impl
	rule__Delay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_0()); }

	FullStopFullStopFullStop 

{ after(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getGroup_1()); }
(rule__Delay__Group_1__0)?
{ after(grammarAccess.getDelayAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delay__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group_1__0__Impl
	rule__Delay__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getIDTerminalRuleCall_1_0()); }
(	RULE_ID)*
{ after(grammarAccess.getDelayAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_1_1()); }

	FullStopFullStopFullStop 

{ after(grammarAccess.getDelayAccess().getFullStopFullStopFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Space__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Space__Group_1__0__Impl
	rule__Space__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	VerticalLineVerticalLine 

{ after(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Space__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Space__Group_1__1__Impl
	rule__Space__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getSpaceAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Space__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Space__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Space__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_2()); }

	VerticalLineVerticalLine 

{ after(grammarAccess.getSpaceAccess().getVerticalLineVerticalLineKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Hidefootbox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hidefootbox__Group__0__Impl
	rule__Hidefootbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hidefootbox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHidefootboxAccess().getHideKeyword_0()); }

	Hide 

{ after(grammarAccess.getHidefootboxAccess().getHideKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hidefootbox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hidefootbox__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hidefootbox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHidefootboxAccess().getFootboxKeyword_1()); }

	Footbox 

{ after(grammarAccess.getHidefootboxAccess().getFootboxKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Activate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activate__Group__0__Impl
	rule__Activate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getActivateKeyword_0()); }

	Activate 

{ after(grammarAccess.getActivateAccess().getActivateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activate__Group__1__Impl
	rule__Activate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getCOLORTerminalRuleCall_1()); }
(	RULE_COLOR)?
{ after(grammarAccess.getActivateAccess().getCOLORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getNameAssignment_2()); }
(rule__Activate__NameAssignment_2)
{ after(grammarAccess.getActivateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Deactivate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deactivate__Group__0__Impl
	rule__Deactivate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getAlternatives_0()); }
(rule__Deactivate__Alternatives_0)
{ after(grammarAccess.getDeactivateAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Deactivate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deactivate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getIdAssignment_1()); }
(rule__Deactivate__IdAssignment_1)
{ after(grammarAccess.getDeactivateAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantCreation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCreation__Group__0__Impl
	rule__ParticipantCreation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCreation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCreationAccess().getCreateKeyword_0()); }

	Create 

{ after(grammarAccess.getParticipantCreationAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCreation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCreation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCreation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCreationAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getParticipantCreationAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Box__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__0__Impl
	rule__Box__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getBoxKeyword_0()); }

	Box 

{ after(grammarAccess.getBoxAccess().getBoxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__1__Impl
	rule__Box__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getQuotationMarkKeyword_1()); }

	QuotationMark 

{ after(grammarAccess.getBoxAccess().getQuotationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__2__Impl
	rule__Box__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getIDTerminalRuleCall_2()); }
(	RULE_ID)*
{ after(grammarAccess.getBoxAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__3__Impl
	rule__Box__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getQuotationMarkKeyword_3()); }

	QuotationMark 

{ after(grammarAccess.getBoxAccess().getQuotationMarkKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__4__Impl
	rule__Box__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getCOLORTerminalRuleCall_4()); }
(	RULE_COLOR)?
{ after(grammarAccess.getBoxAccess().getCOLORTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__5__Impl
	rule__Box__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_5()); }
	RULE_NEWLINE
{ after(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__6__Impl
	rule__Box__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getGroup_6()); }
(rule__Box__Group_6__0)*
{ after(grammarAccess.getBoxAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__7__Impl
	rule__Box__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getEndKeyword_7()); }

	End 

{ after(grammarAccess.getBoxAccess().getEndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getBoxKeyword_8()); }

	Box 

{ after(grammarAccess.getBoxAccess().getBoxKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Box__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group_6__0__Impl
	rule__Box__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getDefinitionsAssignment_6_0()); }
(rule__Box__DefinitionsAssignment_6_0)?
{ after(grammarAccess.getBoxAccess().getDefinitionsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Box__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Box__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Box__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_6_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getBoxAccess().getNEWLINETerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Plantuml__DiagramsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlantumlAccess().getDiagramsDiagramParserRuleCall_0()); }
	ruleDiagram{ after(grammarAccess.getPlantumlAccess().getDiagramsDiagramParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getDiagramAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__IdsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdsIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArrowAccess().getIdsIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arrow__IdsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowAccess().getIdsIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getArrowAccess().getIdsIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_5_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getAltElseAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AltElse__ElsesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAltElseAccess().getElsesElseParserRuleCall_4_0()); }
	ruleElse{ after(grammarAccess.getAltElseAccess().getElsesElseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Else__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getElseAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupingMessages__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupingMessagesAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getGroupingMessagesAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__RidAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidDefinitionCrossReference_1_0_1_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getRidDefinitionIDTerminalRuleCall_1_0_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getRidDefinitionIDTerminalRuleCall_1_0_1_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getRidDefinitionCrossReference_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__RidsAssignment_1_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getRidsDefinitionCrossReference_1_0_1_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getRidsDefinitionIDTerminalRuleCall_1_0_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getRidsDefinitionIDTerminalRuleCall_1_0_1_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getRidsDefinitionCrossReference_1_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__LidAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidDefinitionCrossReference_1_1_1_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getLidDefinitionIDTerminalRuleCall_1_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getLidDefinitionIDTerminalRuleCall_1_1_1_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getLidDefinitionCrossReference_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__LidsAssignment_1_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getLidsDefinitionCrossReference_1_1_1_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getLidsDefinitionIDTerminalRuleCall_1_1_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getLidsDefinitionIDTerminalRuleCall_1_1_1_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getLidsDefinitionCrossReference_1_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OidAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidDefinitionCrossReference_1_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getOidDefinitionIDTerminalRuleCall_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getOidDefinitionIDTerminalRuleCall_1_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getOidDefinitionCrossReference_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OidsAssignment_1_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteAccess().getOidsDefinitionCrossReference_1_2_2_1_0()); }
(
{ before(grammarAccess.getNoteAccess().getOidsDefinitionIDTerminalRuleCall_1_2_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNoteAccess().getOidsDefinitionIDTerminalRuleCall_1_2_2_1_0_1()); }
)
{ after(grammarAccess.getNoteAccess().getOidsDefinitionCrossReference_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getReferenceAccess().getIdDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getIdDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getIdDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__IdsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getIdsDefinitionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getReferenceAccess().getIdsDefinitionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getIdsDefinitionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getIdsDefinitionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activate__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getActivateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Deactivate__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeactivateAccess().getIdActivateCrossReference_1_0()); }
(
{ before(grammarAccess.getDeactivateAccess().getIdActivateIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDeactivateAccess().getIdActivateIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDeactivateAccess().getIdActivateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Box__DefinitionsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxAccess().getDefinitionsDefinitionParserRuleCall_6_0_0()); }
	ruleDefinition{ after(grammarAccess.getBoxAccess().getDefinitionsDefinitionParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


