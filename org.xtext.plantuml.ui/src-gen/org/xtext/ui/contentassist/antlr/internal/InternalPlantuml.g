/*
 * generated by Xtext
 */
grammar InternalPlantuml;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.PlantumlGrammarAccess;

}

@parser::members {
 
 	private PlantumlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PlantumlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getDiagramsAssignment()); }
(rule__Model__DiagramsAssignment)*
{ after(grammarAccess.getModelAccess().getDiagramsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDiagram
entryRuleDiagram 
:
{ before(grammarAccess.getDiagramRule()); }
	 ruleDiagram
{ after(grammarAccess.getDiagramRule()); } 
	 EOF 
;

// Rule Diagram
ruleDiagram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDiagramAccess().getGroup()); }
(rule__Diagram__Group__0)
{ after(grammarAccess.getDiagramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequence
entryRuleSequence 
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceAccess().getAlternatives()); }
(rule__Sequence__Alternatives)
{ after(grammarAccess.getSequenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getAlternatives()); }
(rule__Comment__Alternatives)
{ after(grammarAccess.getCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
(rule__Definition__Alternatives)
{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getGroup_0()); }
(rule__Instruction__Group_0__0)
{ after(grammarAccess.getInstructionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCommentParserRuleCall_1()); }
	ruleComment
{ after(grammarAccess.getInstructionAccess().getCommentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getDefinitionParserRuleCall_2()); }
	ruleDefinition
{ after(grammarAccess.getInstructionAccess().getDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getGroup_0()); }
(rule__Sequence__Group_0__0)
{ after(grammarAccess.getSequenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_1()); }
(rule__Sequence__Group_1__0)
{ after(grammarAccess.getSequenceAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getXKeyword_2()); }

	'->x' 

{ after(grammarAccess.getSequenceAccess().getXKeyword_2()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getXKeyword_3()); }

	'x<-' 

{ after(grammarAccess.getSequenceAccess().getXKeyword_3()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_4()); }
(rule__Sequence__Group_4__0)
{ after(grammarAccess.getSequenceAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_5()); }
(rule__Sequence__Group_5__0)
{ after(grammarAccess.getSequenceAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_6()); }
(rule__Sequence__Group_6__0)
{ after(grammarAccess.getSequenceAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_7()); }
(rule__Sequence__Group_7__0)
{ after(grammarAccess.getSequenceAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_8()); }
(rule__Sequence__Group_8__0)
{ after(grammarAccess.getSequenceAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_9()); }
(rule__Sequence__Group_9__0)
{ after(grammarAccess.getSequenceAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_10()); }
(rule__Sequence__Group_10__0)
{ after(grammarAccess.getSequenceAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_11()); }
(rule__Sequence__Group_11__0)
{ after(grammarAccess.getSequenceAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_12()); }
(rule__Sequence__Group_12__0)
{ after(grammarAccess.getSequenceAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getGroup_13()); }
(rule__Sequence__Group_13__0)
{ after(grammarAccess.getSequenceAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_14()); }

	'<->' 

{ after(grammarAccess.getSequenceAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_14()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getOKeyword_15()); }

	'<->o' 

{ after(grammarAccess.getSequenceAccess().getOKeyword_15()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getOKeyword_16()); }

	'o<->' 

{ after(grammarAccess.getSequenceAccess().getOKeyword_16()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getLessThanSignVerticalLineHyphenMinusHyphenMinusKeyword_17()); }

	'<|--' 

{ after(grammarAccess.getSequenceAccess().getLessThanSignVerticalLineHyphenMinusHyphenMinusKeyword_17()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusHyphenMinusVerticalLineGreaterThanSignKeyword_18()); }

	'--|>' 

{ after(grammarAccess.getSequenceAccess().getHyphenMinusHyphenMinusVerticalLineGreaterThanSignKeyword_18()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getFullStopFullStopKeyword_19()); }

	'..' 

{ after(grammarAccess.getSequenceAccess().getFullStopFullStopKeyword_19()); }
)

    |(
{ before(grammarAccess.getSequenceAccess().getFullStopKeyword_20()); }

	'.' 

{ after(grammarAccess.getSequenceAccess().getFullStopKeyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getGroup_0()); }
(rule__Comment__Group_0__0)
{ after(grammarAccess.getCommentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCommentAccess().getGroup_1()); }
(rule__Comment__Group_1__0)
{ after(grammarAccess.getCommentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getGroup_0()); }
(rule__Definition__Group_0__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_1()); }
(rule__Definition__Group_1__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_2()); }
(rule__Definition__Group_2__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_3()); }
(rule__Definition__Group_3__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getGroup_4()); }
(rule__Definition__Group_4__0)
{ after(grammarAccess.getDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Diagram__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__0__Impl
	rule__Diagram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getStartumlKeyword_0()); }

	'@startuml' 

{ after(grammarAccess.getDiagramAccess().getStartumlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__1__Impl
	rule__Diagram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getInstructionsAssignment_1()); }
(rule__Diagram__InstructionsAssignment_1)*
{ after(grammarAccess.getDiagramAccess().getInstructionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Diagram__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Diagram__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getEndumlKeyword_2()); }

	'@enduml' 

{ after(grammarAccess.getDiagramAccess().getEndumlKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Instruction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__0__Impl
	rule__Instruction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getNameAssignment_0_0()); }
(rule__Instruction__NameAssignment_0_0)
{ after(grammarAccess.getInstructionAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__1__Impl
	rule__Instruction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getSequenceParserRuleCall_0_1()); }
	ruleSequence
{ after(grammarAccess.getInstructionAccess().getSequenceParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__2__Impl
	rule__Instruction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getNameAssignment_0_2()); }
(rule__Instruction__NameAssignment_0_2)
{ after(grammarAccess.getInstructionAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__3__Impl
	rule__Instruction__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getGroup_0_3()); }
(rule__Instruction__Group_0_3__0)?
{ after(grammarAccess.getInstructionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getCommentParserRuleCall_0_4()); }
(	ruleComment)?
{ after(grammarAccess.getInstructionAccess().getCommentParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Instruction__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0_3__0__Impl
	rule__Instruction__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getColonKeyword_0_3_0()); }

	':' 

{ after(grammarAccess.getInstructionAccess().getColonKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getSTRINGTerminalRuleCall_0_3_1()); }
	RULE_STRING
{ after(grammarAccess.getInstructionAccess().getSTRINGTerminalRuleCall_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_0__0__Impl
	rule__Sequence__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_0_0()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }

	'->' 

{ after(grammarAccess.getSequenceAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_1__0__Impl
	rule__Sequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLessThanSignHyphenMinusKeyword_1_0()); }

	'<-' 

{ after(grammarAccess.getSequenceAccess().getLessThanSignHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_1_1()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_4__0__Impl
	rule__Sequence__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_4_0()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusGreaterThanSignGreaterThanSignKeyword_4_1()); }

	'->>' 

{ after(grammarAccess.getSequenceAccess().getHyphenMinusGreaterThanSignGreaterThanSignKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_5__0__Impl
	rule__Sequence__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLessThanSignLessThanSignHyphenMinusKeyword_5_0()); }

	'<<-' 

{ after(grammarAccess.getSequenceAccess().getLessThanSignLessThanSignHyphenMinusKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_5_1()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_6__0__Impl
	rule__Sequence__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_6_0()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusReverseSolidusKeyword_6_1()); }

	'-\\' 

{ after(grammarAccess.getSequenceAccess().getHyphenMinusReverseSolidusKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_7__0__Impl
	rule__Sequence__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSolidusHyphenMinusKeyword_7_0()); }

	'/-' 

{ after(grammarAccess.getSequenceAccess().getSolidusHyphenMinusKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_7_1()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_8__0__Impl
	rule__Sequence__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_8_0()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusReverseSolidusReverseSolidusKeyword_8_1()); }

	'-\\\\' 

{ after(grammarAccess.getSequenceAccess().getHyphenMinusReverseSolidusReverseSolidusKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_9__0__Impl
	rule__Sequence__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSolidusSolidusHyphenMinusKeyword_9_0()); }

	'//-' 

{ after(grammarAccess.getSequenceAccess().getSolidusSolidusHyphenMinusKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_9_1()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_10__0__Impl
	rule__Sequence__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_10_0()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getOKeyword_10_1()); }

	'->o' 

{ after(grammarAccess.getSequenceAccess().getOKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_11__0__Impl
	rule__Sequence__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getOKeyword_11_0()); }

	'o<-' 

{ after(grammarAccess.getSequenceAccess().getOKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_11_1()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_12__0__Impl
	rule__Sequence__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_12_0()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_12__1__Impl
	rule__Sequence__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusHyphenMinusKeyword_12_1()); }

	'--' 

{ after(grammarAccess.getSequenceAccess().getHyphenMinusHyphenMinusKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getOKeyword_12_2()); }

	'//o' 

{ after(grammarAccess.getSequenceAccess().getOKeyword_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sequence__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_13__0__Impl
	rule__Sequence__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getOKeyword_13_0()); }

	'o\\\\--' 

{ after(grammarAccess.getSequenceAccess().getOKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_13_1()); }
(
	'-' 
)*
{ after(grammarAccess.getSequenceAccess().getHyphenMinusKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_0__0__Impl
	rule__Comment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getApostropheKeyword_0_0()); }

	'\'' 

{ after(grammarAccess.getCommentAccess().getApostropheKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_0__1__Impl
	rule__Comment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getSTRINGTerminalRuleCall_0_1()); }
	RULE_STRING
{ after(grammarAccess.getCommentAccess().getSTRINGTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getApostropheKeyword_0_2()); }

	'\'' 

{ after(grammarAccess.getCommentAccess().getApostropheKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Comment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__0__Impl
	rule__Comment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getSolidusApostropheKeyword_1_0()); }

	'/\'' 

{ after(grammarAccess.getCommentAccess().getSolidusApostropheKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__1__Impl
	rule__Comment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
{ after(grammarAccess.getCommentAccess().getSTRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__2__Impl
	rule__Comment__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getGroup_1_2()); }
(rule__Comment__Group_1_2__0)*
{ after(grammarAccess.getCommentAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__3__Impl
	rule__Comment__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getWSTerminalRuleCall_1_3()); }
(	RULE_WS)*
{ after(grammarAccess.getCommentAccess().getWSTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getApostropheSolidusKeyword_1_4()); }

	'\'/' 

{ after(grammarAccess.getCommentAccess().getApostropheSolidusKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Comment__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1_2__0__Impl
	rule__Comment__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getWSTerminalRuleCall_1_2_0()); }
	RULE_WS
{ after(grammarAccess.getCommentAccess().getWSTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getStringsAssignment_1_2_1()); }
(rule__Comment__StringsAssignment_1_2_1)
{ after(grammarAccess.getCommentAccess().getStringsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_0__0__Impl
	rule__Definition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getActorKeyword_0_0()); }

	'actor' 

{ after(grammarAccess.getDefinitionAccess().getActorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_0_1()); }
(rule__Definition__NameAssignment_0_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__0__Impl
	rule__Definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getBoundaryKeyword_1_0()); }

	'boundary' 

{ after(grammarAccess.getDefinitionAccess().getBoundaryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1_1()); }
(rule__Definition__NameAssignment_1_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__0__Impl
	rule__Definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getControlKeyword_2_0()); }

	'control' 

{ after(grammarAccess.getDefinitionAccess().getControlKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_2_1()); }
(rule__Definition__NameAssignment_2_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_3__0__Impl
	rule__Definition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getEntityKeyword_3_0()); }

	'entity' 

{ after(grammarAccess.getDefinitionAccess().getEntityKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_3_1()); }
(rule__Definition__NameAssignment_3_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_4__0__Impl
	rule__Definition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getDatabaseKeyword_4_0()); }

	'database' 

{ after(grammarAccess.getDefinitionAccess().getDatabaseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameAssignment_4_1()); }
(rule__Definition__NameAssignment_4_1)
{ after(grammarAccess.getDefinitionAccess().getNameAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__DiagramsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDiagramsDiagramParserRuleCall_0()); }
	ruleDiagram{ after(grammarAccess.getModelAccess().getDiagramsDiagramParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Diagram__InstructionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDiagramAccess().getInstructionsInstructionParserRuleCall_1_0()); }
	ruleInstruction{ after(grammarAccess.getDiagramAccess().getInstructionsInstructionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getInstructionAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__StringsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getStringsSTRINGTerminalRuleCall_1_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getCommentAccess().getStringsSTRINGTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getDefinitionAccess().getNameIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


