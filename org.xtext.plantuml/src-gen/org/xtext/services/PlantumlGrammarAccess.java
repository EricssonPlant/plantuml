/*
 * generated by Xtext
 */
package org.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class PlantumlGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cDiagramsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDiagramsDiagramParserRuleCall_0 = (RuleCall)cDiagramsAssignment.eContents().get(0);
		
		//// Model is a number of @startuml's and @enduml's
		//Model:
		//	diagrams+=Diagram*;
		@Override public ParserRule getRule() { return rule; }

		//diagrams+=Diagram*
		public Assignment getDiagramsAssignment() { return cDiagramsAssignment; }

		//Diagram
		public RuleCall getDiagramsDiagramParserRuleCall_0() { return cDiagramsDiagramParserRuleCall_0; }
	}

	public class DiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Diagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStartumlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInstructionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInstructionsInstructionParserRuleCall_1_0 = (RuleCall)cInstructionsAssignment_1.eContents().get(0);
		private final Keyword cEndumlKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// A diagram starts with @Startuml and ends with @enduml, 
		//// with some number of instructions in between
		//Diagram:
		//	"@startuml" instructions+=Instruction* "@enduml";
		@Override public ParserRule getRule() { return rule; }

		//"@startuml" instructions+=Instruction* "@enduml"
		public Group getGroup() { return cGroup; }

		//"@startuml"
		public Keyword getStartumlKeyword_0() { return cStartumlKeyword_0; }

		//instructions+=Instruction*
		public Assignment getInstructionsAssignment_1() { return cInstructionsAssignment_1; }

		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_1_0() { return cInstructionsInstructionParserRuleCall_1_0; }

		//"@enduml"
		public Keyword getEndumlKeyword_2() { return cEndumlKeyword_2; }
	}

	public class InstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Instruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cName1Assignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cName1IDTerminalRuleCall_0_0_0 = (RuleCall)cName1Assignment_0_0.eContents().get(0);
		private final RuleCall cSequenceParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cName2Assignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cName2IDTerminalRuleCall_0_2_0 = (RuleCall)cName2Assignment_0_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cColonKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_3_1 = (RuleCall)cGroup_0_3.eContents().get(1);
		private final RuleCall cML_COMMENTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSL_COMMENTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final RuleCall cDefinitionParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final RuleCall cColorParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final RuleCall cAutoNumberParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//// An instruction is either a sequence or a comment, or an autonumber command
		//Instruction:
		//	name1=ID Sequence name2=ID (":" ID)? | ML_COMMENT | SL_COMMENT | Definition Color? | AutoNumber;
		@Override public ParserRule getRule() { return rule; }

		//name1=ID Sequence name2=ID (":" ID)? | ML_COMMENT | SL_COMMENT | Definition Color? | AutoNumber
		public Alternatives getAlternatives() { return cAlternatives; }

		//name1=ID Sequence name2=ID (":" ID)?
		public Group getGroup_0() { return cGroup_0; }

		//name1=ID
		public Assignment getName1Assignment_0_0() { return cName1Assignment_0_0; }

		//ID
		public RuleCall getName1IDTerminalRuleCall_0_0_0() { return cName1IDTerminalRuleCall_0_0_0; }

		//Sequence
		public RuleCall getSequenceParserRuleCall_0_1() { return cSequenceParserRuleCall_0_1; }

		//name2=ID
		public Assignment getName2Assignment_0_2() { return cName2Assignment_0_2; }

		//ID
		public RuleCall getName2IDTerminalRuleCall_0_2_0() { return cName2IDTerminalRuleCall_0_2_0; }

		//(":" ID)?
		public Group getGroup_0_3() { return cGroup_0_3; }

		//":"
		public Keyword getColonKeyword_0_3_0() { return cColonKeyword_0_3_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_3_1() { return cIDTerminalRuleCall_0_3_1; }

		//ML_COMMENT
		public RuleCall getML_COMMENTTerminalRuleCall_1() { return cML_COMMENTTerminalRuleCall_1; }

		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_2() { return cSL_COMMENTTerminalRuleCall_2; }

		//Definition Color?
		public Group getGroup_3() { return cGroup_3; }

		//Definition
		public RuleCall getDefinitionParserRuleCall_3_0() { return cDefinitionParserRuleCall_3_0; }

		//Color?
		public RuleCall getColorParserRuleCall_3_1() { return cColorParserRuleCall_3_1; }

		//AutoNumber
		public RuleCall getAutoNumberParserRuleCall_4() { return cAutoNumberParserRuleCall_4; }
	}

	public class SequenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Sequence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cXKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cXKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLessThanSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cLessThanSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLessThanSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cHyphenMinusKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cReverseSolidusKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cReverseSolidusKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cSolidusKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cHyphenMinusKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cReverseSolidusReverseSolidusKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Keyword cSolidusKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cSolidusKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Keyword cHyphenMinusKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Keyword cOKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Keyword cOKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLessThanSignKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Keyword cHyphenMinusKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Keyword cSolidusKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Keyword cSolidusKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cOKeyword_12_5 = (Keyword)cGroup_12.eContents().get(5);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cOKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cReverseSolidusReverseSolidusKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_13_3 = (Keyword)cGroup_13.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Keyword cLessThanSignKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_14_2 = (Keyword)cGroup_14.eContents().get(2);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Keyword cLessThanSignKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_15_2 = (Keyword)cGroup_15.eContents().get(2);
		private final Keyword cOKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Keyword cOKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cLessThanSignKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_16_2 = (Keyword)cGroup_16.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Keyword cLessThanSignKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cVerticalLineKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_17_2 = (Keyword)cGroup_17.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_17_3 = (Keyword)cGroup_17.eContents().get(3);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Keyword cHyphenMinusKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Keyword cVerticalLineKeyword_18_2 = (Keyword)cGroup_18.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_18_3 = (Keyword)cGroup_18.eContents().get(3);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Keyword cFullStopKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cFullStopKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Keyword cFullStopKeyword_20 = (Keyword)cAlternatives.eContents().get(20);
		
		//Sequence:
		//	"-"* "-" // - = u002D  | > = u003E
		//	">" | "<" "-" "-"* // < = u003C  | - = u002D
		//	| "-" ">" // - = u002D  | > = u003E
		//	"x" | "x" "<" // < = u003C | - = u002D
		//	"-" | "-"* "-" ">" // - = u002D | > = u003E
		//	">" | "<" "<" "-" "-"* // < = u003C | - = u002D
		//	| "-"* "-" "\\" // - = u002D
		//	"\\" | "/" "-" "-"* // / = u002F | - = u002D
		//	| "-"* "-" // - = u0g02D
		//	"\\\\" | "/" "/" "-" "-"* // / = u002F | - = u002D
		//	| "-"* "-" ">" // - = u002D | > = u003E
		//	"o" | "o" "<" "-" "-"* // < = u003C | - = u002D
		//	| "-"* "-" "-" "/" "/" // - = u002D | / = u002F
		//	"o" | "o" "\\\\" "-" "-" "-"* // - = u002D
		//	| "<" "-" // < = u003C | - = u002D | > = u003E
		//	">" | "<" "-" ">" // < = u003C | - = u002D | > = u003E
		//	"o" | "o" "<" "-" // < = u003C | - = u002D | > = u003E
		//	">" | "<" "|" "-" // < = u003C | | = u007C | - = u002D
		//	"-" | "-" "-" "|" // - = u002D | | = u007C | > = u003E
		//	">" | "." // . = u002E
		//	"." | // . = u002E
		//	".";
		@Override public ParserRule getRule() { return rule; }

		//"-"* "-" // - = u002D  | > = u003E
		//">" | "<" "-" "-"* // < = u003C  | - = u002D
		//| "-" ">" // - = u002D  | > = u003E
		//"x" | "x" "<" // < = u003C | - = u002D
		//"-" | "-"* "-" ">" // - = u002D | > = u003E
		//">" | "<" "<" "-" "-"* // < = u003C | - = u002D
		//| "-"* "-" "\\" // - = u002D
		//"\\" | "/" "-" "-"* // / = u002F | - = u002D
		//| "-"* "-" // - = u0g02D
		//"\\\\" | "/" "/" "-" "-"* // / = u002F | - = u002D
		//| "-"* "-" ">" // - = u002D | > = u003E
		//"o" | "o" "<" "-" "-"* // < = u003C | - = u002D
		//| "-"* "-" "-" "/" "/" // - = u002D | / = u002F
		//"o" | "o" "\\\\" "-" "-" "-"* // - = u002D
		//| "<" "-" // < = u003C | - = u002D | > = u003E
		//">" | "<" "-" ">" // < = u003C | - = u002D | > = u003E
		//"o" | "o" "<" "-" // < = u003C | - = u002D | > = u003E
		//">" | "<" "|" "-" // < = u003C | | = u007C | - = u002D
		//"-" | "-" "-" "|" // - = u002D | | = u007C | > = u003E
		//">" | "." // . = u002E
		//"." | // . = u002E
		//"."
		public Alternatives getAlternatives() { return cAlternatives; }

		//"-"* "-" // - = u002D  | > = u003E
		//">"
		public Group getGroup_0() { return cGroup_0; }

		//"-"*
		public Keyword getHyphenMinusKeyword_0_0() { return cHyphenMinusKeyword_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_0_1() { return cHyphenMinusKeyword_0_1; }

		//// - = u002D  | > = u003E
		//">"
		public Keyword getGreaterThanSignKeyword_0_2() { return cGreaterThanSignKeyword_0_2; }

		//"<" "-" "-"* // < = u003C  | - = u002D
		public Group getGroup_1() { return cGroup_1; }

		//"<"
		public Keyword getLessThanSignKeyword_1_0() { return cLessThanSignKeyword_1_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1_1() { return cHyphenMinusKeyword_1_1; }

		//"-"*
		public Keyword getHyphenMinusKeyword_1_2() { return cHyphenMinusKeyword_1_2; }

		//"-" ">" // - = u002D  | > = u003E
		//"x"
		public Group getGroup_2() { return cGroup_2; }

		//"-"
		public Keyword getHyphenMinusKeyword_2_0() { return cHyphenMinusKeyword_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_1() { return cGreaterThanSignKeyword_2_1; }

		//// - = u002D  | > = u003E
		//"x"
		public Keyword getXKeyword_2_2() { return cXKeyword_2_2; }

		//"x" "<" // < = u003C | - = u002D
		//"-"
		public Group getGroup_3() { return cGroup_3; }

		//"x"
		public Keyword getXKeyword_3_0() { return cXKeyword_3_0; }

		//"<"
		public Keyword getLessThanSignKeyword_3_1() { return cLessThanSignKeyword_3_1; }

		//// < = u003C | - = u002D
		//"-"
		public Keyword getHyphenMinusKeyword_3_2() { return cHyphenMinusKeyword_3_2; }

		//"-"* "-" ">" // - = u002D | > = u003E
		//">"
		public Group getGroup_4() { return cGroup_4; }

		//"-"*
		public Keyword getHyphenMinusKeyword_4_0() { return cHyphenMinusKeyword_4_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_2() { return cGreaterThanSignKeyword_4_2; }

		//// - = u002D | > = u003E
		//">"
		public Keyword getGreaterThanSignKeyword_4_3() { return cGreaterThanSignKeyword_4_3; }

		//"<" "<" "-" "-"* // < = u003C | - = u002D
		public Group getGroup_5() { return cGroup_5; }

		//"<"
		public Keyword getLessThanSignKeyword_5_0() { return cLessThanSignKeyword_5_0; }

		//"<"
		public Keyword getLessThanSignKeyword_5_1() { return cLessThanSignKeyword_5_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_5_2() { return cHyphenMinusKeyword_5_2; }

		//"-"*
		public Keyword getHyphenMinusKeyword_5_3() { return cHyphenMinusKeyword_5_3; }

		//"-"* "-" "\\" // - = u002D
		//"\\"
		public Group getGroup_6() { return cGroup_6; }

		//"-"*
		public Keyword getHyphenMinusKeyword_6_0() { return cHyphenMinusKeyword_6_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_6_1() { return cHyphenMinusKeyword_6_1; }

		//"\\"
		public Keyword getReverseSolidusKeyword_6_2() { return cReverseSolidusKeyword_6_2; }

		//// - = u002D
		//"\\"
		public Keyword getReverseSolidusKeyword_6_3() { return cReverseSolidusKeyword_6_3; }

		//"/" "-" "-"* // / = u002F | - = u002D
		public Group getGroup_7() { return cGroup_7; }

		//"/"
		public Keyword getSolidusKeyword_7_0() { return cSolidusKeyword_7_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_7_1() { return cHyphenMinusKeyword_7_1; }

		//"-"*
		public Keyword getHyphenMinusKeyword_7_2() { return cHyphenMinusKeyword_7_2; }

		//"-"* "-" // - = u0g02D
		//"\\\\"
		public Group getGroup_8() { return cGroup_8; }

		//"-"*
		public Keyword getHyphenMinusKeyword_8_0() { return cHyphenMinusKeyword_8_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_8_1() { return cHyphenMinusKeyword_8_1; }

		//// - = u0g02D
		//"\\\\"
		public Keyword getReverseSolidusReverseSolidusKeyword_8_2() { return cReverseSolidusReverseSolidusKeyword_8_2; }

		//"/" "/" "-" "-"* // / = u002F | - = u002D
		public Group getGroup_9() { return cGroup_9; }

		//"/"
		public Keyword getSolidusKeyword_9_0() { return cSolidusKeyword_9_0; }

		//"/"
		public Keyword getSolidusKeyword_9_1() { return cSolidusKeyword_9_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_9_2() { return cHyphenMinusKeyword_9_2; }

		//"-"*
		public Keyword getHyphenMinusKeyword_9_3() { return cHyphenMinusKeyword_9_3; }

		//"-"* "-" ">" // - = u002D | > = u003E
		//"o"
		public Group getGroup_10() { return cGroup_10; }

		//"-"*
		public Keyword getHyphenMinusKeyword_10_0() { return cHyphenMinusKeyword_10_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_10_1() { return cHyphenMinusKeyword_10_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_10_2() { return cGreaterThanSignKeyword_10_2; }

		//// - = u002D | > = u003E
		//"o"
		public Keyword getOKeyword_10_3() { return cOKeyword_10_3; }

		//"o" "<" "-" "-"* // < = u003C | - = u002D
		public Group getGroup_11() { return cGroup_11; }

		//"o"
		public Keyword getOKeyword_11_0() { return cOKeyword_11_0; }

		//"<"
		public Keyword getLessThanSignKeyword_11_1() { return cLessThanSignKeyword_11_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_11_2() { return cHyphenMinusKeyword_11_2; }

		//"-"*
		public Keyword getHyphenMinusKeyword_11_3() { return cHyphenMinusKeyword_11_3; }

		//"-"* "-" "-" "/" "/" // - = u002D | / = u002F
		//"o"
		public Group getGroup_12() { return cGroup_12; }

		//"-"*
		public Keyword getHyphenMinusKeyword_12_0() { return cHyphenMinusKeyword_12_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_12_1() { return cHyphenMinusKeyword_12_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_12_2() { return cHyphenMinusKeyword_12_2; }

		//"/"
		public Keyword getSolidusKeyword_12_3() { return cSolidusKeyword_12_3; }

		//"/"
		public Keyword getSolidusKeyword_12_4() { return cSolidusKeyword_12_4; }

		//// - = u002D | / = u002F
		//"o"
		public Keyword getOKeyword_12_5() { return cOKeyword_12_5; }

		//"o" "\\\\" "-" "-" "-"* // - = u002D
		public Group getGroup_13() { return cGroup_13; }

		//"o"
		public Keyword getOKeyword_13_0() { return cOKeyword_13_0; }

		//"\\\\"
		public Keyword getReverseSolidusReverseSolidusKeyword_13_1() { return cReverseSolidusReverseSolidusKeyword_13_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_13_2() { return cHyphenMinusKeyword_13_2; }

		//"-"
		public Keyword getHyphenMinusKeyword_13_3() { return cHyphenMinusKeyword_13_3; }

		//"-"*
		public Keyword getHyphenMinusKeyword_13_4() { return cHyphenMinusKeyword_13_4; }

		//"<" "-" // < = u003C | - = u002D | > = u003E
		//">"
		public Group getGroup_14() { return cGroup_14; }

		//"<"
		public Keyword getLessThanSignKeyword_14_0() { return cLessThanSignKeyword_14_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_14_1() { return cHyphenMinusKeyword_14_1; }

		//// < = u003C | - = u002D | > = u003E
		//">"
		public Keyword getGreaterThanSignKeyword_14_2() { return cGreaterThanSignKeyword_14_2; }

		//"<" "-" ">" // < = u003C | - = u002D | > = u003E
		//"o"
		public Group getGroup_15() { return cGroup_15; }

		//"<"
		public Keyword getLessThanSignKeyword_15_0() { return cLessThanSignKeyword_15_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_15_1() { return cHyphenMinusKeyword_15_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_15_2() { return cGreaterThanSignKeyword_15_2; }

		//// < = u003C | - = u002D | > = u003E
		//"o"
		public Keyword getOKeyword_15_3() { return cOKeyword_15_3; }

		//"o" "<" "-" // < = u003C | - = u002D | > = u003E
		//">"
		public Group getGroup_16() { return cGroup_16; }

		//"o"
		public Keyword getOKeyword_16_0() { return cOKeyword_16_0; }

		//"<"
		public Keyword getLessThanSignKeyword_16_1() { return cLessThanSignKeyword_16_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_16_2() { return cHyphenMinusKeyword_16_2; }

		//// < = u003C | - = u002D | > = u003E
		//">"
		public Keyword getGreaterThanSignKeyword_16_3() { return cGreaterThanSignKeyword_16_3; }

		//"<" "|" "-" // < = u003C | | = u007C | - = u002D
		//"-"
		public Group getGroup_17() { return cGroup_17; }

		//"<"
		public Keyword getLessThanSignKeyword_17_0() { return cLessThanSignKeyword_17_0; }

		//"|"
		public Keyword getVerticalLineKeyword_17_1() { return cVerticalLineKeyword_17_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_17_2() { return cHyphenMinusKeyword_17_2; }

		//// < = u003C | | = u007C | - = u002D
		//"-"
		public Keyword getHyphenMinusKeyword_17_3() { return cHyphenMinusKeyword_17_3; }

		//"-" "-" "|" // - = u002D | | = u007C | > = u003E
		//">"
		public Group getGroup_18() { return cGroup_18; }

		//"-"
		public Keyword getHyphenMinusKeyword_18_0() { return cHyphenMinusKeyword_18_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_18_1() { return cHyphenMinusKeyword_18_1; }

		//"|"
		public Keyword getVerticalLineKeyword_18_2() { return cVerticalLineKeyword_18_2; }

		//// - = u002D | | = u007C | > = u003E
		//">"
		public Keyword getGreaterThanSignKeyword_18_3() { return cGreaterThanSignKeyword_18_3; }

		//"." // . = u002E
		//"."
		public Group getGroup_19() { return cGroup_19; }

		//"."
		public Keyword getFullStopKeyword_19_0() { return cFullStopKeyword_19_0; }

		//// . = u002E
		//"."
		public Keyword getFullStopKeyword_19_1() { return cFullStopKeyword_19_1; }

		//// . = u002E
		//"."
		public Keyword getFullStopKeyword_20() { return cFullStopKeyword_20; }
	}

	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Definition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cActorKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cBoundaryKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cControlKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cEntityKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_3_1_0 = (RuleCall)cNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cDatabaseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_4_1_0 = (RuleCall)cNameAssignment_4_1.eContents().get(0);
		
		//// Rule for defining objects in PlantUML, such as
		//// actors, boundaries, controls, entities and databases
		//Definition:
		//	"actor" name=ID | "boundary" name=ID | "control" name=ID | "entity" name=ID | "database" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"actor" name=ID | "boundary" name=ID | "control" name=ID | "entity" name=ID | "database" name=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//"actor" name=ID
		public Group getGroup_0() { return cGroup_0; }

		//"actor"
		public Keyword getActorKeyword_0_0() { return cActorKeyword_0_0; }

		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }

		//"boundary" name=ID
		public Group getGroup_1() { return cGroup_1; }

		//"boundary"
		public Keyword getBoundaryKeyword_1_0() { return cBoundaryKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }

		//"control" name=ID
		public Group getGroup_2() { return cGroup_2; }

		//"control"
		public Keyword getControlKeyword_2_0() { return cControlKeyword_2_0; }

		//name=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }

		//"entity" name=ID
		public Group getGroup_3() { return cGroup_3; }

		//"entity"
		public Keyword getEntityKeyword_3_0() { return cEntityKeyword_3_0; }

		//name=ID
		public Assignment getNameAssignment_3_1() { return cNameAssignment_3_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_1_0() { return cNameIDTerminalRuleCall_3_1_0; }

		//"database" name=ID
		public Group getGroup_4() { return cGroup_4; }

		//"database"
		public Keyword getDatabaseKeyword_4_0() { return cDatabaseKeyword_4_0; }

		//name=ID
		public Assignment getNameAssignment_4_1() { return cNameAssignment_4_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_1_0() { return cNameIDTerminalRuleCall_4_1_0; }
	}

	public class AutoNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AutoNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAutonumberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//// Rule for the autonumbering function. Can be followed by one or two numbers, separated by spaces
		//AutoNumber:
		//	"autonumber" (INT INT?)?;
		@Override public ParserRule getRule() { return rule; }

		//"autonumber" (INT INT?)?
		public Group getGroup() { return cGroup; }

		//"autonumber"
		public Keyword getAutonumberKeyword_0() { return cAutonumberKeyword_0; }

		//(INT INT?)?
		public Group getGroup_1() { return cGroup_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_0() { return cINTTerminalRuleCall_1_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}

	public class ColorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Color");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAliceBlueKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cAntiqueWhiteKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cAquaKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		private final Keyword cAquamarineKeyword_1_3 = (Keyword)cAlternatives_1.eContents().get(3);
		private final Keyword cAzureKeyword_1_4 = (Keyword)cAlternatives_1.eContents().get(4);
		private final Keyword cBeigeKeyword_1_5 = (Keyword)cAlternatives_1.eContents().get(5);
		private final Keyword cBisqueKeyword_1_6 = (Keyword)cAlternatives_1.eContents().get(6);
		private final Keyword cBlackKeyword_1_7 = (Keyword)cAlternatives_1.eContents().get(7);
		private final Keyword cBlanchedAlmondKeyword_1_8 = (Keyword)cAlternatives_1.eContents().get(8);
		private final Keyword cBlueKeyword_1_9 = (Keyword)cAlternatives_1.eContents().get(9);
		private final Keyword cBlueVioletKeyword_1_10 = (Keyword)cAlternatives_1.eContents().get(10);
		private final Keyword cBrownKeyword_1_11 = (Keyword)cAlternatives_1.eContents().get(11);
		private final Keyword cBurlyWoodKeyword_1_12 = (Keyword)cAlternatives_1.eContents().get(12);
		private final Keyword cCadetBlueKeyword_1_13 = (Keyword)cAlternatives_1.eContents().get(13);
		private final Keyword cChartreuseKeyword_1_14 = (Keyword)cAlternatives_1.eContents().get(14);
		private final Keyword cChocolateKeyword_1_15 = (Keyword)cAlternatives_1.eContents().get(15);
		private final Keyword cCoralKeyword_1_16 = (Keyword)cAlternatives_1.eContents().get(16);
		private final Keyword cCornflowerBlueKeyword_1_17 = (Keyword)cAlternatives_1.eContents().get(17);
		private final Keyword cCornsilkKeyword_1_18 = (Keyword)cAlternatives_1.eContents().get(18);
		private final Keyword cCrimsonKeyword_1_19 = (Keyword)cAlternatives_1.eContents().get(19);
		private final Keyword cCyanKeyword_1_20 = (Keyword)cAlternatives_1.eContents().get(20);
		private final Keyword cDarkBlueKeyword_1_21 = (Keyword)cAlternatives_1.eContents().get(21);
		private final Keyword cDarkCyanKeyword_1_22 = (Keyword)cAlternatives_1.eContents().get(22);
		private final Keyword cDarkGoldenRodKeyword_1_23 = (Keyword)cAlternatives_1.eContents().get(23);
		private final Keyword cDarkGrayKeyword_1_24 = (Keyword)cAlternatives_1.eContents().get(24);
		private final Keyword cDarkGreenKeyword_1_25 = (Keyword)cAlternatives_1.eContents().get(25);
		private final Keyword cDarkGreyKeyword_1_26 = (Keyword)cAlternatives_1.eContents().get(26);
		private final Keyword cDarkKhakiKeyword_1_27 = (Keyword)cAlternatives_1.eContents().get(27);
		private final Keyword cDarkMagentaKeyword_1_28 = (Keyword)cAlternatives_1.eContents().get(28);
		private final Keyword cDarkOliveGreenKeyword_1_29 = (Keyword)cAlternatives_1.eContents().get(29);
		private final Keyword cDarkOrchidKeyword_1_30 = (Keyword)cAlternatives_1.eContents().get(30);
		private final Keyword cDarkRedKeyword_1_31 = (Keyword)cAlternatives_1.eContents().get(31);
		private final Keyword cDarkSalmoKeyword_1_32 = (Keyword)cAlternatives_1.eContents().get(32);
		private final Keyword cDarkSeaGreenKeyword_1_33 = (Keyword)cAlternatives_1.eContents().get(33);
		private final Keyword cDarkSlateBlueKeyword_1_34 = (Keyword)cAlternatives_1.eContents().get(34);
		private final Keyword cDarkSlateGrayKeyword_1_35 = (Keyword)cAlternatives_1.eContents().get(35);
		private final Keyword cDarkSlateGreyKeyword_1_36 = (Keyword)cAlternatives_1.eContents().get(36);
		private final Keyword cDarkTurquoiseKeyword_1_37 = (Keyword)cAlternatives_1.eContents().get(37);
		private final Keyword cDarkVioletKeyword_1_38 = (Keyword)cAlternatives_1.eContents().get(38);
		private final Keyword cDarkorangeKeyword_1_39 = (Keyword)cAlternatives_1.eContents().get(39);
		private final Keyword cDeepPinkKeyword_1_40 = (Keyword)cAlternatives_1.eContents().get(40);
		private final Keyword cDeepSkyBlueKeyword_1_41 = (Keyword)cAlternatives_1.eContents().get(41);
		private final Keyword cDimGrayKeyword_1_42 = (Keyword)cAlternatives_1.eContents().get(42);
		private final Keyword cDimGreyKeyword_1_43 = (Keyword)cAlternatives_1.eContents().get(43);
		private final Keyword cDodgerBlueKeyword_1_44 = (Keyword)cAlternatives_1.eContents().get(44);
		private final Keyword cFireBrickKeyword_1_45 = (Keyword)cAlternatives_1.eContents().get(45);
		private final Keyword cFloralWhiteKeyword_1_46 = (Keyword)cAlternatives_1.eContents().get(46);
		private final Keyword cForestGreenKeyword_1_47 = (Keyword)cAlternatives_1.eContents().get(47);
		private final Keyword cFuchsiaKeyword_1_48 = (Keyword)cAlternatives_1.eContents().get(48);
		private final Keyword cGainsboroKeyword_1_49 = (Keyword)cAlternatives_1.eContents().get(49);
		private final Keyword cGhostWhiteKeyword_1_50 = (Keyword)cAlternatives_1.eContents().get(50);
		private final Keyword cGoldKeyword_1_51 = (Keyword)cAlternatives_1.eContents().get(51);
		private final Keyword cGoldenRodKeyword_1_52 = (Keyword)cAlternatives_1.eContents().get(52);
		private final Keyword cGrayKeyword_1_53 = (Keyword)cAlternatives_1.eContents().get(53);
		private final Keyword cGreenKeyword_1_54 = (Keyword)cAlternatives_1.eContents().get(54);
		private final Keyword cGreenYellowKeyword_1_55 = (Keyword)cAlternatives_1.eContents().get(55);
		private final Keyword cGreyKeyword_1_56 = (Keyword)cAlternatives_1.eContents().get(56);
		private final Keyword cHoneyDewKeyword_1_57 = (Keyword)cAlternatives_1.eContents().get(57);
		private final Keyword cHotPinkKeyword_1_58 = (Keyword)cAlternatives_1.eContents().get(58);
		private final Keyword cIndianRedKeyword_1_59 = (Keyword)cAlternatives_1.eContents().get(59);
		private final Keyword cIndigoKeyword_1_60 = (Keyword)cAlternatives_1.eContents().get(60);
		private final Keyword cIvoryKeyword_1_61 = (Keyword)cAlternatives_1.eContents().get(61);
		private final Keyword cKhakiKeyword_1_62 = (Keyword)cAlternatives_1.eContents().get(62);
		private final Keyword cLavenderKeyword_1_63 = (Keyword)cAlternatives_1.eContents().get(63);
		private final Keyword cLavenderBlushKeyword_1_64 = (Keyword)cAlternatives_1.eContents().get(64);
		private final Keyword cLawnGreenKeyword_1_65 = (Keyword)cAlternatives_1.eContents().get(65);
		private final Keyword cLemonChiffonKeyword_1_66 = (Keyword)cAlternatives_1.eContents().get(66);
		private final Keyword cLightBlueKeyword_1_67 = (Keyword)cAlternatives_1.eContents().get(67);
		private final Keyword cLightCoralKeyword_1_68 = (Keyword)cAlternatives_1.eContents().get(68);
		private final Keyword cLightCyanKeyword_1_69 = (Keyword)cAlternatives_1.eContents().get(69);
		private final Keyword cLightGoldenRodYellowKeyword_1_70 = (Keyword)cAlternatives_1.eContents().get(70);
		private final Keyword cLightGrayKeyword_1_71 = (Keyword)cAlternatives_1.eContents().get(71);
		private final Keyword cLightGreenKeyword_1_72 = (Keyword)cAlternatives_1.eContents().get(72);
		private final Keyword cLightGreyKeyword_1_73 = (Keyword)cAlternatives_1.eContents().get(73);
		private final Keyword cLightPinkKeyword_1_74 = (Keyword)cAlternatives_1.eContents().get(74);
		private final Keyword cLightSalmonKeyword_1_75 = (Keyword)cAlternatives_1.eContents().get(75);
		private final Keyword cLightSeaGreenKeyword_1_76 = (Keyword)cAlternatives_1.eContents().get(76);
		private final Keyword cLightSkyBlueKeyword_1_77 = (Keyword)cAlternatives_1.eContents().get(77);
		private final Keyword cLightSlateGrayKeyword_1_78 = (Keyword)cAlternatives_1.eContents().get(78);
		private final Keyword cLightSlateGreyKeyword_1_79 = (Keyword)cAlternatives_1.eContents().get(79);
		private final Keyword cLightSteelBlueKeyword_1_80 = (Keyword)cAlternatives_1.eContents().get(80);
		private final Keyword cLightYellowKeyword_1_81 = (Keyword)cAlternatives_1.eContents().get(81);
		private final Keyword cLimeKeyword_1_82 = (Keyword)cAlternatives_1.eContents().get(82);
		private final Keyword cLimeGreenKeyword_1_83 = (Keyword)cAlternatives_1.eContents().get(83);
		private final Keyword cLinenKeyword_1_84 = (Keyword)cAlternatives_1.eContents().get(84);
		private final Keyword cMagentaKeyword_1_85 = (Keyword)cAlternatives_1.eContents().get(85);
		private final Keyword cMaroonKeyword_1_86 = (Keyword)cAlternatives_1.eContents().get(86);
		private final Keyword cMediumAquaMarineKeyword_1_87 = (Keyword)cAlternatives_1.eContents().get(87);
		private final Keyword cMediumBlueKeyword_1_88 = (Keyword)cAlternatives_1.eContents().get(88);
		private final Keyword cMediumOrchidKeyword_1_89 = (Keyword)cAlternatives_1.eContents().get(89);
		private final Keyword cMediumPurpleKeyword_1_90 = (Keyword)cAlternatives_1.eContents().get(90);
		private final Keyword cMediumSeaGreenKeyword_1_91 = (Keyword)cAlternatives_1.eContents().get(91);
		private final Keyword cMediumSlateBlueKeyword_1_92 = (Keyword)cAlternatives_1.eContents().get(92);
		private final Keyword cMediumSpringGreenKeyword_1_93 = (Keyword)cAlternatives_1.eContents().get(93);
		private final Keyword cMediumTurquoiseKeyword_1_94 = (Keyword)cAlternatives_1.eContents().get(94);
		private final Keyword cMediumVioletRedKeyword_1_95 = (Keyword)cAlternatives_1.eContents().get(95);
		private final Keyword cMidnightBlueKeyword_1_96 = (Keyword)cAlternatives_1.eContents().get(96);
		private final Keyword cMintCreamKeyword_1_97 = (Keyword)cAlternatives_1.eContents().get(97);
		private final Keyword cMistyRoseKeyword_1_98 = (Keyword)cAlternatives_1.eContents().get(98);
		private final Keyword cMoccasinKeyword_1_99 = (Keyword)cAlternatives_1.eContents().get(99);
		private final Keyword cNavajoWhiteKeyword_1_100 = (Keyword)cAlternatives_1.eContents().get(100);
		private final Keyword cNavyKeyword_1_101 = (Keyword)cAlternatives_1.eContents().get(101);
		private final Keyword cOldLaceKeyword_1_102 = (Keyword)cAlternatives_1.eContents().get(102);
		private final Keyword cOliveKeyword_1_103 = (Keyword)cAlternatives_1.eContents().get(103);
		private final Keyword cOliveDrabKeyword_1_104 = (Keyword)cAlternatives_1.eContents().get(104);
		private final Keyword cOrangeRedKeyword_1_105 = (Keyword)cAlternatives_1.eContents().get(105);
		private final Keyword cOrchidKeyword_1_106 = (Keyword)cAlternatives_1.eContents().get(106);
		private final Keyword cPaleGoldenRodKeyword_1_107 = (Keyword)cAlternatives_1.eContents().get(107);
		private final Keyword cPaleGreenKeyword_1_108 = (Keyword)cAlternatives_1.eContents().get(108);
		private final Keyword cPaleTurquoiseKeyword_1_109 = (Keyword)cAlternatives_1.eContents().get(109);
		private final Keyword cPaleVioletRedKeyword_1_110 = (Keyword)cAlternatives_1.eContents().get(110);
		private final Keyword cPapayaWhipKeyword_1_111 = (Keyword)cAlternatives_1.eContents().get(111);
		private final Keyword cPeachPuffKeyword_1_112 = (Keyword)cAlternatives_1.eContents().get(112);
		private final Keyword cPeruKeyword_1_113 = (Keyword)cAlternatives_1.eContents().get(113);
		private final Keyword cPinkKeyword_1_114 = (Keyword)cAlternatives_1.eContents().get(114);
		private final Keyword cPlumKeyword_1_115 = (Keyword)cAlternatives_1.eContents().get(115);
		private final Keyword cPowderBlueKeyword_1_116 = (Keyword)cAlternatives_1.eContents().get(116);
		private final Keyword cPurpleKeyword_1_117 = (Keyword)cAlternatives_1.eContents().get(117);
		private final Keyword cRedKeyword_1_118 = (Keyword)cAlternatives_1.eContents().get(118);
		private final Keyword cRosyBrownKeyword_1_119 = (Keyword)cAlternatives_1.eContents().get(119);
		private final Keyword cRoyalBlueKeyword_1_120 = (Keyword)cAlternatives_1.eContents().get(120);
		private final Keyword cSaddleBrownKeyword_1_121 = (Keyword)cAlternatives_1.eContents().get(121);
		private final Keyword cSalmonKeyword_1_122 = (Keyword)cAlternatives_1.eContents().get(122);
		private final Keyword cSandyBrownKeyword_1_123 = (Keyword)cAlternatives_1.eContents().get(123);
		private final Keyword cSeaGreenKeyword_1_124 = (Keyword)cAlternatives_1.eContents().get(124);
		private final Keyword cSiennaKeyword_1_125 = (Keyword)cAlternatives_1.eContents().get(125);
		private final Keyword cSilverKeyword_1_126 = (Keyword)cAlternatives_1.eContents().get(126);
		private final Keyword cSkyBlueKeyword_1_127 = (Keyword)cAlternatives_1.eContents().get(127);
		private final Keyword cSlateBlueKeyword_1_128 = (Keyword)cAlternatives_1.eContents().get(128);
		private final Keyword cSlateGrayKeyword_1_129 = (Keyword)cAlternatives_1.eContents().get(129);
		private final Keyword cSlateGreyKeyword_1_130 = (Keyword)cAlternatives_1.eContents().get(130);
		private final Keyword cSnowKeyword_1_131 = (Keyword)cAlternatives_1.eContents().get(131);
		private final Keyword cSpringGreenKeyword_1_132 = (Keyword)cAlternatives_1.eContents().get(132);
		private final Keyword cSteelBlueKeyword_1_133 = (Keyword)cAlternatives_1.eContents().get(133);
		private final Keyword cTanKeyword_1_134 = (Keyword)cAlternatives_1.eContents().get(134);
		private final Keyword cTealKeyword_1_135 = (Keyword)cAlternatives_1.eContents().get(135);
		private final Keyword cThistleKeyword_1_136 = (Keyword)cAlternatives_1.eContents().get(136);
		private final Keyword cTomatoKeyword_1_137 = (Keyword)cAlternatives_1.eContents().get(137);
		private final Keyword cTurquoiseKeyword_1_138 = (Keyword)cAlternatives_1.eContents().get(138);
		private final Keyword cVioletKeyword_1_139 = (Keyword)cAlternatives_1.eContents().get(139);
		private final Keyword cWheatKeyword_1_140 = (Keyword)cAlternatives_1.eContents().get(140);
		private final Keyword cWhiteKeyword_1_141 = (Keyword)cAlternatives_1.eContents().get(141);
		private final Keyword cWhiteSmokeKeyword_1_142 = (Keyword)cAlternatives_1.eContents().get(142);
		private final Keyword cYellowKeyword_1_143 = (Keyword)cAlternatives_1.eContents().get(143);
		private final Keyword cYellowGreenKeyword_1_144 = (Keyword)cAlternatives_1.eContents().get(144);
		
		//// Rule for colors
		//Color:
		//	"#"+ ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" |
		//	"BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral"
		//	| "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" |
		//	"DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrchid" | "DarkRed" | "DarkSalmo" |
		//	"DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "Darkorange"
		//	| "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" |
		//	"Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" |
		//	"HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" |
		//	"LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" |
		//	"LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" |
		//	"LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" |
		//	"MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" |
		//	"MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" |
		//	"Navy" | "OldLace" | "Olive" | "OliveDrab" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise"
		//	| "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "Red" |
		//	"RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "Sienna" | "Silver" | "SkyBlue" |
		//	"SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" |
		//	"Tomato" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen");
		@Override public ParserRule getRule() { return rule; }

		//"#"+ ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" |
		//"Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue"
		//| "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey"
		//| "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrchid" | "DarkRed" | "DarkSalmo" | "DarkSeaGreen" |
		//"DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "Darkorange" | "DeepPink" |
		//"DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" |
		//"Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink"
		//| "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" |
		//"LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" |
		//"LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" |
		//"LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" |
		//"MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" |
		//"MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" |
		//"Navy" | "OldLace" | "Olive" | "OliveDrab" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise"
		//| "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "Red" |
		//"RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "Sienna" | "Silver" | "SkyBlue" |
		//"SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato"
		//| "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen")
		public Group getGroup() { return cGroup; }

		//"#"+
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//"AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" | "BlanchedAlmond" |
		//"Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral" | "CornflowerBlue"
		//| "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" | "DarkGreen" | "DarkGrey"
		//| "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrchid" | "DarkRed" | "DarkSalmo" | "DarkSeaGreen" |
		//"DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "Darkorange" | "DeepPink" |
		//"DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" | "Fuchsia" |
		//"Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" | "HoneyDew" | "HotPink"
		//| "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" | "LemonChiffon" |
		//"LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" | "LightGrey" |
		//"LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" |
		//"LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" |
		//"MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" |
		//"MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" |
		//"Navy" | "OldLace" | "Olive" | "OliveDrab" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise"
		//| "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "Red" |
		//"RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "Sienna" | "Silver" | "SkyBlue" |
		//"SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" | "Tomato"
		//| "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"AliceBlue"
		public Keyword getAliceBlueKeyword_1_0() { return cAliceBlueKeyword_1_0; }

		//"AntiqueWhite"
		public Keyword getAntiqueWhiteKeyword_1_1() { return cAntiqueWhiteKeyword_1_1; }

		//"Aqua"
		public Keyword getAquaKeyword_1_2() { return cAquaKeyword_1_2; }

		//"Aquamarine"
		public Keyword getAquamarineKeyword_1_3() { return cAquamarineKeyword_1_3; }

		//"Azure"
		public Keyword getAzureKeyword_1_4() { return cAzureKeyword_1_4; }

		//"Beige"
		public Keyword getBeigeKeyword_1_5() { return cBeigeKeyword_1_5; }

		//"Bisque"
		public Keyword getBisqueKeyword_1_6() { return cBisqueKeyword_1_6; }

		//"Black"
		public Keyword getBlackKeyword_1_7() { return cBlackKeyword_1_7; }

		//"BlanchedAlmond"
		public Keyword getBlanchedAlmondKeyword_1_8() { return cBlanchedAlmondKeyword_1_8; }

		//"Blue"
		public Keyword getBlueKeyword_1_9() { return cBlueKeyword_1_9; }

		//"BlueViolet"
		public Keyword getBlueVioletKeyword_1_10() { return cBlueVioletKeyword_1_10; }

		//"Brown"
		public Keyword getBrownKeyword_1_11() { return cBrownKeyword_1_11; }

		//"BurlyWood"
		public Keyword getBurlyWoodKeyword_1_12() { return cBurlyWoodKeyword_1_12; }

		//"CadetBlue"
		public Keyword getCadetBlueKeyword_1_13() { return cCadetBlueKeyword_1_13; }

		//"Chartreuse"
		public Keyword getChartreuseKeyword_1_14() { return cChartreuseKeyword_1_14; }

		//"Chocolate"
		public Keyword getChocolateKeyword_1_15() { return cChocolateKeyword_1_15; }

		//"Coral"
		public Keyword getCoralKeyword_1_16() { return cCoralKeyword_1_16; }

		//"CornflowerBlue"
		public Keyword getCornflowerBlueKeyword_1_17() { return cCornflowerBlueKeyword_1_17; }

		//"Cornsilk"
		public Keyword getCornsilkKeyword_1_18() { return cCornsilkKeyword_1_18; }

		//"Crimson"
		public Keyword getCrimsonKeyword_1_19() { return cCrimsonKeyword_1_19; }

		//"Cyan"
		public Keyword getCyanKeyword_1_20() { return cCyanKeyword_1_20; }

		//"DarkBlue"
		public Keyword getDarkBlueKeyword_1_21() { return cDarkBlueKeyword_1_21; }

		//"DarkCyan"
		public Keyword getDarkCyanKeyword_1_22() { return cDarkCyanKeyword_1_22; }

		//"DarkGoldenRod"
		public Keyword getDarkGoldenRodKeyword_1_23() { return cDarkGoldenRodKeyword_1_23; }

		//"DarkGray"
		public Keyword getDarkGrayKeyword_1_24() { return cDarkGrayKeyword_1_24; }

		//"DarkGreen"
		public Keyword getDarkGreenKeyword_1_25() { return cDarkGreenKeyword_1_25; }

		//"DarkGrey"
		public Keyword getDarkGreyKeyword_1_26() { return cDarkGreyKeyword_1_26; }

		//"DarkKhaki"
		public Keyword getDarkKhakiKeyword_1_27() { return cDarkKhakiKeyword_1_27; }

		//"DarkMagenta"
		public Keyword getDarkMagentaKeyword_1_28() { return cDarkMagentaKeyword_1_28; }

		//"DarkOliveGreen"
		public Keyword getDarkOliveGreenKeyword_1_29() { return cDarkOliveGreenKeyword_1_29; }

		//"DarkOrchid"
		public Keyword getDarkOrchidKeyword_1_30() { return cDarkOrchidKeyword_1_30; }

		//"DarkRed"
		public Keyword getDarkRedKeyword_1_31() { return cDarkRedKeyword_1_31; }

		//"DarkSalmo"
		public Keyword getDarkSalmoKeyword_1_32() { return cDarkSalmoKeyword_1_32; }

		//"DarkSeaGreen"
		public Keyword getDarkSeaGreenKeyword_1_33() { return cDarkSeaGreenKeyword_1_33; }

		//"DarkSlateBlue"
		public Keyword getDarkSlateBlueKeyword_1_34() { return cDarkSlateBlueKeyword_1_34; }

		//"DarkSlateGray"
		public Keyword getDarkSlateGrayKeyword_1_35() { return cDarkSlateGrayKeyword_1_35; }

		//"DarkSlateGrey"
		public Keyword getDarkSlateGreyKeyword_1_36() { return cDarkSlateGreyKeyword_1_36; }

		//"DarkTurquoise"
		public Keyword getDarkTurquoiseKeyword_1_37() { return cDarkTurquoiseKeyword_1_37; }

		//"DarkViolet"
		public Keyword getDarkVioletKeyword_1_38() { return cDarkVioletKeyword_1_38; }

		//"Darkorange"
		public Keyword getDarkorangeKeyword_1_39() { return cDarkorangeKeyword_1_39; }

		//"DeepPink"
		public Keyword getDeepPinkKeyword_1_40() { return cDeepPinkKeyword_1_40; }

		//"DeepSkyBlue"
		public Keyword getDeepSkyBlueKeyword_1_41() { return cDeepSkyBlueKeyword_1_41; }

		//"DimGray"
		public Keyword getDimGrayKeyword_1_42() { return cDimGrayKeyword_1_42; }

		//"DimGrey"
		public Keyword getDimGreyKeyword_1_43() { return cDimGreyKeyword_1_43; }

		//"DodgerBlue"
		public Keyword getDodgerBlueKeyword_1_44() { return cDodgerBlueKeyword_1_44; }

		//"FireBrick"
		public Keyword getFireBrickKeyword_1_45() { return cFireBrickKeyword_1_45; }

		//"FloralWhite"
		public Keyword getFloralWhiteKeyword_1_46() { return cFloralWhiteKeyword_1_46; }

		//"ForestGreen"
		public Keyword getForestGreenKeyword_1_47() { return cForestGreenKeyword_1_47; }

		//"Fuchsia"
		public Keyword getFuchsiaKeyword_1_48() { return cFuchsiaKeyword_1_48; }

		//"Gainsboro"
		public Keyword getGainsboroKeyword_1_49() { return cGainsboroKeyword_1_49; }

		//"GhostWhite"
		public Keyword getGhostWhiteKeyword_1_50() { return cGhostWhiteKeyword_1_50; }

		//"Gold"
		public Keyword getGoldKeyword_1_51() { return cGoldKeyword_1_51; }

		//"GoldenRod"
		public Keyword getGoldenRodKeyword_1_52() { return cGoldenRodKeyword_1_52; }

		//"Gray"
		public Keyword getGrayKeyword_1_53() { return cGrayKeyword_1_53; }

		//"Green"
		public Keyword getGreenKeyword_1_54() { return cGreenKeyword_1_54; }

		//"GreenYellow"
		public Keyword getGreenYellowKeyword_1_55() { return cGreenYellowKeyword_1_55; }

		//"Grey"
		public Keyword getGreyKeyword_1_56() { return cGreyKeyword_1_56; }

		//"HoneyDew"
		public Keyword getHoneyDewKeyword_1_57() { return cHoneyDewKeyword_1_57; }

		//"HotPink"
		public Keyword getHotPinkKeyword_1_58() { return cHotPinkKeyword_1_58; }

		//"IndianRed"
		public Keyword getIndianRedKeyword_1_59() { return cIndianRedKeyword_1_59; }

		//"Indigo"
		public Keyword getIndigoKeyword_1_60() { return cIndigoKeyword_1_60; }

		//"Ivory"
		public Keyword getIvoryKeyword_1_61() { return cIvoryKeyword_1_61; }

		//"Khaki"
		public Keyword getKhakiKeyword_1_62() { return cKhakiKeyword_1_62; }

		//"Lavender"
		public Keyword getLavenderKeyword_1_63() { return cLavenderKeyword_1_63; }

		//"LavenderBlush"
		public Keyword getLavenderBlushKeyword_1_64() { return cLavenderBlushKeyword_1_64; }

		//"LawnGreen"
		public Keyword getLawnGreenKeyword_1_65() { return cLawnGreenKeyword_1_65; }

		//"LemonChiffon"
		public Keyword getLemonChiffonKeyword_1_66() { return cLemonChiffonKeyword_1_66; }

		//"LightBlue"
		public Keyword getLightBlueKeyword_1_67() { return cLightBlueKeyword_1_67; }

		//"LightCoral"
		public Keyword getLightCoralKeyword_1_68() { return cLightCoralKeyword_1_68; }

		//"LightCyan"
		public Keyword getLightCyanKeyword_1_69() { return cLightCyanKeyword_1_69; }

		//"LightGoldenRodYellow"
		public Keyword getLightGoldenRodYellowKeyword_1_70() { return cLightGoldenRodYellowKeyword_1_70; }

		//"LightGray"
		public Keyword getLightGrayKeyword_1_71() { return cLightGrayKeyword_1_71; }

		//"LightGreen"
		public Keyword getLightGreenKeyword_1_72() { return cLightGreenKeyword_1_72; }

		//"LightGrey"
		public Keyword getLightGreyKeyword_1_73() { return cLightGreyKeyword_1_73; }

		//"LightPink"
		public Keyword getLightPinkKeyword_1_74() { return cLightPinkKeyword_1_74; }

		//"LightSalmon"
		public Keyword getLightSalmonKeyword_1_75() { return cLightSalmonKeyword_1_75; }

		//"LightSeaGreen"
		public Keyword getLightSeaGreenKeyword_1_76() { return cLightSeaGreenKeyword_1_76; }

		//"LightSkyBlue"
		public Keyword getLightSkyBlueKeyword_1_77() { return cLightSkyBlueKeyword_1_77; }

		//"LightSlateGray"
		public Keyword getLightSlateGrayKeyword_1_78() { return cLightSlateGrayKeyword_1_78; }

		//"LightSlateGrey"
		public Keyword getLightSlateGreyKeyword_1_79() { return cLightSlateGreyKeyword_1_79; }

		//"LightSteelBlue"
		public Keyword getLightSteelBlueKeyword_1_80() { return cLightSteelBlueKeyword_1_80; }

		//"LightYellow"
		public Keyword getLightYellowKeyword_1_81() { return cLightYellowKeyword_1_81; }

		//"Lime"
		public Keyword getLimeKeyword_1_82() { return cLimeKeyword_1_82; }

		//"LimeGreen"
		public Keyword getLimeGreenKeyword_1_83() { return cLimeGreenKeyword_1_83; }

		//"Linen"
		public Keyword getLinenKeyword_1_84() { return cLinenKeyword_1_84; }

		//"Magenta"
		public Keyword getMagentaKeyword_1_85() { return cMagentaKeyword_1_85; }

		//"Maroon"
		public Keyword getMaroonKeyword_1_86() { return cMaroonKeyword_1_86; }

		//"MediumAquaMarine"
		public Keyword getMediumAquaMarineKeyword_1_87() { return cMediumAquaMarineKeyword_1_87; }

		//"MediumBlue"
		public Keyword getMediumBlueKeyword_1_88() { return cMediumBlueKeyword_1_88; }

		//"MediumOrchid"
		public Keyword getMediumOrchidKeyword_1_89() { return cMediumOrchidKeyword_1_89; }

		//"MediumPurple"
		public Keyword getMediumPurpleKeyword_1_90() { return cMediumPurpleKeyword_1_90; }

		//"MediumSeaGreen"
		public Keyword getMediumSeaGreenKeyword_1_91() { return cMediumSeaGreenKeyword_1_91; }

		//"MediumSlateBlue"
		public Keyword getMediumSlateBlueKeyword_1_92() { return cMediumSlateBlueKeyword_1_92; }

		//"MediumSpringGreen"
		public Keyword getMediumSpringGreenKeyword_1_93() { return cMediumSpringGreenKeyword_1_93; }

		//"MediumTurquoise"
		public Keyword getMediumTurquoiseKeyword_1_94() { return cMediumTurquoiseKeyword_1_94; }

		//"MediumVioletRed"
		public Keyword getMediumVioletRedKeyword_1_95() { return cMediumVioletRedKeyword_1_95; }

		//"MidnightBlue"
		public Keyword getMidnightBlueKeyword_1_96() { return cMidnightBlueKeyword_1_96; }

		//"MintCream"
		public Keyword getMintCreamKeyword_1_97() { return cMintCreamKeyword_1_97; }

		//"MistyRose"
		public Keyword getMistyRoseKeyword_1_98() { return cMistyRoseKeyword_1_98; }

		//"Moccasin"
		public Keyword getMoccasinKeyword_1_99() { return cMoccasinKeyword_1_99; }

		//"NavajoWhite"
		public Keyword getNavajoWhiteKeyword_1_100() { return cNavajoWhiteKeyword_1_100; }

		//"Navy"
		public Keyword getNavyKeyword_1_101() { return cNavyKeyword_1_101; }

		//"OldLace"
		public Keyword getOldLaceKeyword_1_102() { return cOldLaceKeyword_1_102; }

		//"Olive"
		public Keyword getOliveKeyword_1_103() { return cOliveKeyword_1_103; }

		//"OliveDrab"
		public Keyword getOliveDrabKeyword_1_104() { return cOliveDrabKeyword_1_104; }

		//"OrangeRed"
		public Keyword getOrangeRedKeyword_1_105() { return cOrangeRedKeyword_1_105; }

		//"Orchid"
		public Keyword getOrchidKeyword_1_106() { return cOrchidKeyword_1_106; }

		//"PaleGoldenRod"
		public Keyword getPaleGoldenRodKeyword_1_107() { return cPaleGoldenRodKeyword_1_107; }

		//"PaleGreen"
		public Keyword getPaleGreenKeyword_1_108() { return cPaleGreenKeyword_1_108; }

		//"PaleTurquoise"
		public Keyword getPaleTurquoiseKeyword_1_109() { return cPaleTurquoiseKeyword_1_109; }

		//"PaleVioletRed"
		public Keyword getPaleVioletRedKeyword_1_110() { return cPaleVioletRedKeyword_1_110; }

		//"PapayaWhip"
		public Keyword getPapayaWhipKeyword_1_111() { return cPapayaWhipKeyword_1_111; }

		//"PeachPuff"
		public Keyword getPeachPuffKeyword_1_112() { return cPeachPuffKeyword_1_112; }

		//"Peru"
		public Keyword getPeruKeyword_1_113() { return cPeruKeyword_1_113; }

		//"Pink"
		public Keyword getPinkKeyword_1_114() { return cPinkKeyword_1_114; }

		//"Plum"
		public Keyword getPlumKeyword_1_115() { return cPlumKeyword_1_115; }

		//"PowderBlue"
		public Keyword getPowderBlueKeyword_1_116() { return cPowderBlueKeyword_1_116; }

		//"Purple"
		public Keyword getPurpleKeyword_1_117() { return cPurpleKeyword_1_117; }

		//"Red"
		public Keyword getRedKeyword_1_118() { return cRedKeyword_1_118; }

		//"RosyBrown"
		public Keyword getRosyBrownKeyword_1_119() { return cRosyBrownKeyword_1_119; }

		//"RoyalBlue"
		public Keyword getRoyalBlueKeyword_1_120() { return cRoyalBlueKeyword_1_120; }

		//"SaddleBrown"
		public Keyword getSaddleBrownKeyword_1_121() { return cSaddleBrownKeyword_1_121; }

		//"Salmon"
		public Keyword getSalmonKeyword_1_122() { return cSalmonKeyword_1_122; }

		//"SandyBrown"
		public Keyword getSandyBrownKeyword_1_123() { return cSandyBrownKeyword_1_123; }

		//"SeaGreen"
		public Keyword getSeaGreenKeyword_1_124() { return cSeaGreenKeyword_1_124; }

		//"Sienna"
		public Keyword getSiennaKeyword_1_125() { return cSiennaKeyword_1_125; }

		//"Silver"
		public Keyword getSilverKeyword_1_126() { return cSilverKeyword_1_126; }

		//"SkyBlue"
		public Keyword getSkyBlueKeyword_1_127() { return cSkyBlueKeyword_1_127; }

		//"SlateBlue"
		public Keyword getSlateBlueKeyword_1_128() { return cSlateBlueKeyword_1_128; }

		//"SlateGray"
		public Keyword getSlateGrayKeyword_1_129() { return cSlateGrayKeyword_1_129; }

		//"SlateGrey"
		public Keyword getSlateGreyKeyword_1_130() { return cSlateGreyKeyword_1_130; }

		//"Snow"
		public Keyword getSnowKeyword_1_131() { return cSnowKeyword_1_131; }

		//"SpringGreen"
		public Keyword getSpringGreenKeyword_1_132() { return cSpringGreenKeyword_1_132; }

		//"SteelBlue"
		public Keyword getSteelBlueKeyword_1_133() { return cSteelBlueKeyword_1_133; }

		//"Tan"
		public Keyword getTanKeyword_1_134() { return cTanKeyword_1_134; }

		//"Teal"
		public Keyword getTealKeyword_1_135() { return cTealKeyword_1_135; }

		//"Thistle"
		public Keyword getThistleKeyword_1_136() { return cThistleKeyword_1_136; }

		//"Tomato"
		public Keyword getTomatoKeyword_1_137() { return cTomatoKeyword_1_137; }

		//"Turquoise"
		public Keyword getTurquoiseKeyword_1_138() { return cTurquoiseKeyword_1_138; }

		//"Violet"
		public Keyword getVioletKeyword_1_139() { return cVioletKeyword_1_139; }

		//"Wheat"
		public Keyword getWheatKeyword_1_140() { return cWheatKeyword_1_140; }

		//"White"
		public Keyword getWhiteKeyword_1_141() { return cWhiteKeyword_1_141; }

		//"WhiteSmoke"
		public Keyword getWhiteSmokeKeyword_1_142() { return cWhiteSmokeKeyword_1_142; }

		//"Yellow"
		public Keyword getYellowKeyword_1_143() { return cYellowKeyword_1_143; }

		//"YellowGreen"
		public Keyword getYellowGreenKeyword_1_144() { return cYellowGreenKeyword_1_144; }
	}
	
	
	private final ModelElements pModel;
	private final DiagramElements pDiagram;
	private final InstructionElements pInstruction;
	private final SequenceElements pSequence;
	private final DefinitionElements pDefinition;
	private final AutoNumberElements pAutoNumber;
	private final ColorElements pColor;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public PlantumlGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pModel = new ModelElements();
		this.pDiagram = new DiagramElements();
		this.pInstruction = new InstructionElements();
		this.pSequence = new SequenceElements();
		this.pDefinition = new DefinitionElements();
		this.pAutoNumber = new AutoNumberElements();
		this.pColor = new ColorElements();
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.Plantuml".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//// Model is a number of @startuml's and @enduml's
	//Model:
	//	diagrams+=Diagram*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//// A diagram starts with @Startuml and ends with @enduml, 
	//// with some number of instructions in between
	//Diagram:
	//	"@startuml" instructions+=Instruction* "@enduml";
	public DiagramElements getDiagramAccess() {
		return pDiagram;
	}
	
	public ParserRule getDiagramRule() {
		return getDiagramAccess().getRule();
	}

	//// An instruction is either a sequence or a comment, or an autonumber command
	//Instruction:
	//	name1=ID Sequence name2=ID (":" ID)? | ML_COMMENT | SL_COMMENT | Definition Color? | AutoNumber;
	public InstructionElements getInstructionAccess() {
		return pInstruction;
	}
	
	public ParserRule getInstructionRule() {
		return getInstructionAccess().getRule();
	}

	//Sequence:
	//	"-"* "-" // - = u002D  | > = u003E
	//	">" | "<" "-" "-"* // < = u003C  | - = u002D
	//	| "-" ">" // - = u002D  | > = u003E
	//	"x" | "x" "<" // < = u003C | - = u002D
	//	"-" | "-"* "-" ">" // - = u002D | > = u003E
	//	">" | "<" "<" "-" "-"* // < = u003C | - = u002D
	//	| "-"* "-" "\\" // - = u002D
	//	"\\" | "/" "-" "-"* // / = u002F | - = u002D
	//	| "-"* "-" // - = u0g02D
	//	"\\\\" | "/" "/" "-" "-"* // / = u002F | - = u002D
	//	| "-"* "-" ">" // - = u002D | > = u003E
	//	"o" | "o" "<" "-" "-"* // < = u003C | - = u002D
	//	| "-"* "-" "-" "/" "/" // - = u002D | / = u002F
	//	"o" | "o" "\\\\" "-" "-" "-"* // - = u002D
	//	| "<" "-" // < = u003C | - = u002D | > = u003E
	//	">" | "<" "-" ">" // < = u003C | - = u002D | > = u003E
	//	"o" | "o" "<" "-" // < = u003C | - = u002D | > = u003E
	//	">" | "<" "|" "-" // < = u003C | | = u007C | - = u002D
	//	"-" | "-" "-" "|" // - = u002D | | = u007C | > = u003E
	//	">" | "." // . = u002E
	//	"." | // . = u002E
	//	".";
	public SequenceElements getSequenceAccess() {
		return pSequence;
	}
	
	public ParserRule getSequenceRule() {
		return getSequenceAccess().getRule();
	}

	//// Rule for defining objects in PlantUML, such as
	//// actors, boundaries, controls, entities and databases
	//Definition:
	//	"actor" name=ID | "boundary" name=ID | "control" name=ID | "entity" name=ID | "database" name=ID;
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}

	//// Rule for the autonumbering function. Can be followed by one or two numbers, separated by spaces
	//AutoNumber:
	//	"autonumber" (INT INT?)?;
	public AutoNumberElements getAutoNumberAccess() {
		return pAutoNumber;
	}
	
	public ParserRule getAutoNumberRule() {
		return getAutoNumberAccess().getRule();
	}

	//// Rule for colors
	//Color:
	//	"#"+ ("AliceBlue" | "AntiqueWhite" | "Aqua" | "Aquamarine" | "Azure" | "Beige" | "Bisque" | "Black" |
	//	"BlanchedAlmond" | "Blue" | "BlueViolet" | "Brown" | "BurlyWood" | "CadetBlue" | "Chartreuse" | "Chocolate" | "Coral"
	//	| "CornflowerBlue" | "Cornsilk" | "Crimson" | "Cyan" | "DarkBlue" | "DarkCyan" | "DarkGoldenRod" | "DarkGray" |
	//	"DarkGreen" | "DarkGrey" | "DarkKhaki" | "DarkMagenta" | "DarkOliveGreen" | "DarkOrchid" | "DarkRed" | "DarkSalmo" |
	//	"DarkSeaGreen" | "DarkSlateBlue" | "DarkSlateGray" | "DarkSlateGrey" | "DarkTurquoise" | "DarkViolet" | "Darkorange"
	//	| "DeepPink" | "DeepSkyBlue" | "DimGray" | "DimGrey" | "DodgerBlue" | "FireBrick" | "FloralWhite" | "ForestGreen" |
	//	"Fuchsia" | "Gainsboro" | "GhostWhite" | "Gold" | "GoldenRod" | "Gray" | "Green" | "GreenYellow" | "Grey" |
	//	"HoneyDew" | "HotPink" | "IndianRed" | "Indigo" | "Ivory" | "Khaki" | "Lavender" | "LavenderBlush" | "LawnGreen" |
	//	"LemonChiffon" | "LightBlue" | "LightCoral" | "LightCyan" | "LightGoldenRodYellow" | "LightGray" | "LightGreen" |
	//	"LightGrey" | "LightPink" | "LightSalmon" | "LightSeaGreen" | "LightSkyBlue" | "LightSlateGray" | "LightSlateGrey" |
	//	"LightSteelBlue" | "LightYellow" | "Lime" | "LimeGreen" | "Linen" | "Magenta" | "Maroon" | "MediumAquaMarine" |
	//	"MediumBlue" | "MediumOrchid" | "MediumPurple" | "MediumSeaGreen" | "MediumSlateBlue" | "MediumSpringGreen" |
	//	"MediumTurquoise" | "MediumVioletRed" | "MidnightBlue" | "MintCream" | "MistyRose" | "Moccasin" | "NavajoWhite" |
	//	"Navy" | "OldLace" | "Olive" | "OliveDrab" | "OrangeRed" | "Orchid" | "PaleGoldenRod" | "PaleGreen" | "PaleTurquoise"
	//	| "PaleVioletRed" | "PapayaWhip" | "PeachPuff" | "Peru" | "Pink" | "Plum" | "PowderBlue" | "Purple" | "Red" |
	//	"RosyBrown" | "RoyalBlue" | "SaddleBrown" | "Salmon" | "SandyBrown" | "SeaGreen" | "Sienna" | "Silver" | "SkyBlue" |
	//	"SlateBlue" | "SlateGray" | "SlateGrey" | "Snow" | "SpringGreen" | "SteelBlue" | "Tan" | "Teal" | "Thistle" |
	//	"Tomato" | "Turquoise" | "Violet" | "Wheat" | "White" | "WhiteSmoke" | "Yellow" | "YellowGreen");
	public ColorElements getColorAccess() {
		return pColor;
	}
	
	public ParserRule getColorRule() {
		return getColorAccess().getRule();
	}

	//// Terminals
	//terminal ML_COMMENT:
	//	"/\'"->"\'/";
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	} 

	//terminal SL_COMMENT:
	//	"\'" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_" | "å" | "ä" | "ö") ("a".."z" | "A".."Z" | "_" | "0".."9" | "å" | "ä" | "ö")*;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return tINT;
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return tWS;
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	} 
}
